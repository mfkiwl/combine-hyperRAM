


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "..\\Src\\rho\\rho.s"
    1 00000000         ; 
    2 00000000         ;
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000         
    8 00000000         
    9 00000000         
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         ; 
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000         ;#define STATIC_BUFFER
   18 00000000         ;#define BAYER_TOGGLE
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000         
   25 00000000         
   26 00000000         
   27 00000000         
   28 00000000                 area             rho, code, readonly
   29 00000000                 preserve8
   30 00000000         
   31 00000000         ;extern WR
   32 00000000         ;extern RB
   33 00000000         
   34 00000000                 extern           CAPTURE_BUFFER
   35 00000000                 extern           THRESH_BUFFER
   36 00000000                 extern           DENSITY_X
   37 00000000                 extern           DENSITY_Y
   38 00000000                 extern           QUADRANT_BUFFER
   39 00000000                 extern           QUADRANT_TOTAL
   40 00000000                 extern           QUADRANT_PREVIOUS
   41 00000000                 extern           CENTROID_X
   42 00000000                 extern           CENTROID_Y
   43 00000000                 extern           DENSITY_X_MAX
   44 00000000                 extern           CAPTURE_BUFFER_END
   45 00000000                 extern           CAPTURE_BUFFER_MAX
   46 00000000                 extern           THRESH_BUFFER_END
   47 00000000                 extern           THRESH_BUFFER_MAX
   48 00000000                 extern           THRESH_VALUE
   49 00000000                 extern           RHO_MEM_END
   50 00000000                 extern           CAMERA_PORT
   51 00000000         
   52 00000000                 extern           proc_flag
   53 00000000                 entry
   54 00000000         
   55 00000000                 align
   56 00000000         asm_test
                               proc
   57 00000000                 export           asm_test



ARM Macro Assembler    Page 2 


   58 00000000 F04F 0000       mov              r0, #0
   59 00000004 F04F 0101       mov              r1, #1
   60 00000008 F04F 0202       mov              r2, #2
   61 0000000C F04F 0303       mov              r3, #3
   62 00000010 F04F 0404       mov              r4, #4
   63 00000014 F04F 0505       mov              r5, #5
   64 00000018 F04F 0606       mov              r6, #6
   65 0000001C F04F 0707       mov              r7, #7
   66 00000020 F04F 0808       mov              r8, #8
   67 00000024 F04F 0909       mov              r9, #9
   68 00000028 F04F 0A0A       mov              r10, #10
   69 0000002C F04F 0B0B       mov              r11, #11
   70 00000030 F04F 0C0C       mov              r12, #12
   71 00000034         ;vmov.f32 s24, #24
   72 00000034 4770            bx               lr
   73 00000036                 endp
   74 00000036         
   75 00000036 00 00           align
   76 00000038         rho_init
                               proc
   77 00000038                 export           rho_init
   78 00000038         
   79 00000038 4770            bx               lr
   80 0000003A                 endp
   81 0000003A         
   82 0000003A 00 00           align
   83 0000003C         frame_start
                               proc
   84 0000003C                 import           zero_memory
   85 0000003C                 export           frame_start
   86 0000003C F8DF 9134       ldr              r9, =CAPTURE_BUFFER
   87 00000040         
   88 00000040         
   89 00000040         
   90 00000040 F8DF A134       ldr              r10, =THRESH_BUFFER ; 
   91 00000044 484D            ldr              r0, =THRESH_VALUE ; 
   92 00000046 F8D0 B000       ldr              r11, [r0]
   93 0000004A 4770            bx               lr
   94 0000004C                 endp
   95 0000004C         
   96 0000004C                 align
   97 0000004C         frame_end
                               proc
   98 0000004C                 export           frame_end
   99 0000004C         ; Add the four quadrants into QUADRANT_TOTAL
  100 0000004C 484C            ldr              r0, =QUADRANT_BUFFER ; 
  101 0000004E F850 2B04       ldr              r2, [r0], #4 ; 
  102 00000052 F850 1B04       ldr              r1, [r0], #4
  103 00000056 440A            add              r2, r2, r1
  104 00000058 F850 1B04       ldr              r1, [r0], #4
  105 0000005C 440A            add              r2, r2, r1
  106 0000005E 6801            ldr              r1, [r0]
  107 00000060 440A            add              r2, r2, r1
  108 00000062 4848            ldr              r0, =QUADRANT_TOTAL
  109 00000064 6002            str              r2, [r0]
  110 00000066 4770            bx               lr
  111 00000068                 endp
  112 00000068         
  113 00000068                 align



ARM Macro Assembler    Page 3 


  114 00000068         row_int proc
  115 00000068                 export           row_int
  116 00000068         
  117 00000068 4844            ldr              r0, =THRESH_VALUE ; 
  118 0000006A F8D0 B000       ldr              r11, [r0]
  119 0000006E         
  120 0000006E         ; Store Y delimiter in thresh buffer
  121 0000006E F64A 20AA       mov              r0, #0xaaaa ; 
  122 00000072 F82A 0B02       strh             r0, [r10], #2 ; 
  123 00000076 483F            ldr              r0, =CAPTURE_BUFFER
  124 00000078 4648            mov              r0, r9
  125 0000007A         
  126 0000007A         #line   132              "..\\Src\\rho\\rho.s"
  132 0000007A 4770    row_ret bx               lr
  133 0000007C                 endp
  134 0000007C         
  135 0000007C                 align
  136 0000007C         pixel_proc
                               proc
  137 0000007C                 export           pixel_proc
  138 0000007C         
  139 0000007C F819 3B01 
                       pxl_start
                               ldrb             r3, [r9], #1 ; 
  140 00000080 455B            cmp              r3, r11     ; 
  141 00000082 BFA8 F82A 
              9B02             strgeh           r9, [r10], #2 ; 
  142 00000088 4770            bx               lr
  143 0000008A                 endp
  144 0000008A         
  145 0000008A 00 00           align
  146 0000008C         rho_proc
                               proc
  147 0000008C                 import           printBuffers
  148 0000008C                 export           rho_proc
  149 0000008C E92D 5FFF       stmdb            sp!, {r0-r12,lr}
  150 00000090         
  151 00000090         
  152 00000090 F8DF A0E4       ldr              r10, =THRESH_BUFFER
  153 00000094 4482            add              r10, r10, r0
  154 00000096         
  155 00000096         
  156 00000096 493C            ldr              r1, =THRESH_BUFFER_END ; Set fi
                                                            nal end of thresh b
                                                            uffer for frame
  157 00000098 F8C1 A000       str              r10, [r1]
  158 0000009C         
  159 0000009C F8DF C0D8       ldr              r12, =THRESH_BUFFER
  160 000000A0 F04F 0600       mov              r6, #0      ; 
  161 000000A4 F04F 0700       mov              r7, #0
  162 000000A8 F04F 0800       mov              r8, #0
  163 000000AC         
  164 000000AC F83C 6B02 
                       read_loop
                               ldrh             r6, [r12], #2 ; 
  165 000000B0 F64A 20AA       mov              r0, #0xaaaa
  166 000000B4 4286            cmp              r6, r0      ; 
  167 000000B6 D124            bne              no_del
  168 000000B8         



ARM Macro Assembler    Page 4 


  169 000000B8         ; Process Row
  170 000000B8 4831            ldr              r0, =QUADRANT_BUFFER
  171 000000BA 4934            ldr              r1, =CENTROID_Y
  172 000000BC 8809            ldrh             r1, [r1]
  173 000000BE 428F            cmp              r7, r1      ; 
  174 000000C0 DA07            bge              higher
  175 000000C2 F008 08FD       and              r8, r8, #0xfd ; 
  176 000000C6 F850 1B04       ldr              r1, [r0], #4 ; 
  177 000000CA 6802            ldr              r2, [r0]
  178 000000CC EB01 0002       add              r0, r1, r2
  179 000000D0 E008            b                dx_store
  180 000000D2 F048 0802 
                       higher  orr              r8, r8, #0x02 ; 
  181 000000D6 F100 0008       add              r0, r0, #8  ; 
  182 000000DA F850 1B04       ldr              r1, [r0], #4
  183 000000DE 6802            ldr              r2, [r0]
  184 000000E0 EB01 0002       add              r0, r1, r2  ; Calculate QN into
                                                             r0
  185 000000E4 492A    dx_store
                               ldr              r1, =QUADRANT_PREVIOUS
  186 000000E6 680A            ldr              r2, [r1]    ; 
  187 000000E8 6008            str              r0, [r1]    ; 
  188 000000EA EBA0 0002       sub              r0, r0, r2  ; Calculate QN - QP
                                                             into r0
  189 000000EE 4A29            ldr              r2, =DENSITY_X
  190 000000F0 51D0            str              r0, [r2, r7]
  191 000000F2 F107 0704       add              r7, r7, #4
  192 000000F6 4B28            ldr              r3, =DENSITY_X_MAX ; 
  193 000000F8 681A            ldr              r2, [r3]
  194 000000FA 4290            cmp              r0, r2
  195 000000FC DD2D            ble              rho_lcheck  ; Contiunue (to qua
                                                            drant increment) if
                                                             less than or equal
                                                            
  196 000000FE 6018            str              r0, [r3]    ; Store as new max 
                                                            if greater
  197 00000100 E02B            b                rho_lcheck
  198 00000102         
  199 00000102         ; Process Pixel
  200 00000102 481C    no_del  ldr              r0, =CAPTURE_BUFFER ; Load capt
                                                            ure buffer to corre
                                                            ct offset
  201 00000104 F64F 71FF       mov              r1, #0x0000ffff
  202 00000108 EA00 0001       and              r0, r0, r1  ; Keep bottom half 
                                                            in r0
  203 0000010C 4286            cmp              r6, r0
  204 0000010E         
  205 0000010E         
  206 0000010E E00B            b                rx_corr
  207 00000110         
  208 00000110         
  209 00000110 DB23            blt              rho_lcheck  ; Check for valid v
                                                            alue
  210 00000112 EBA6 0600       sub              r6, r6, r0  ; Remove address of
                                                            fset from r6
  211 00000116 F1A6 0601       sub              r6, r6, #1
  212 0000011A F04F 00A0       mov              r0, #160
  213 0000011E 4286    sudo_mod
                               cmp              r6, r0



ARM Macro Assembler    Page 5 


  214 00000120 DB02            blt              rx_corr
  215 00000122 EBA6 0600       sub              r6, r6, r0
  216 00000126 E7FA            b                sudo_mod
  217 00000128 491C    rx_corr ldr              r1, =CENTROID_X
  218 0000012A 8809            ldrh             r1, [r1]
  219 0000012C 428E            cmp              r6, r1      ; 
  220 0000012E DA02            bge              right
  221 00000130 F008 08FE 
                       left    and              r8, r8, #0xfe ; 
  222 00000134 E001            b                dy_store
  223 00000136 F048 0801 
                       right   orr              r8, r8, #0x01 ; 
  224 0000013A 4919    dy_store
                               ldr              r1, =DENSITY_Y
  225 0000013C EB06 0206       add              r2, r6, r6  ; Calcalute r6 x4 i
                                                            nto r2
  226 00000140 4412            add              r2, r2, r2  ; (r6 is byte width
                                                             while Dx is word w
                                                            idth)
  227 00000142 5888            ldr              r0, [r1, r2] ; 
  228 00000144 F100 0001       add              r0, r0, #1
  229 00000148 5088            str              r0, [r1, r2]
  230 0000014A         
  231 0000014A         ; Increment Quandrants
  232 0000014A 490D    inc_qs  ldr              r1, =QUADRANT_BUFFER
  233 0000014C EB08 0208       add              r2, r8, r8  ; Multiply r8 by wo
                                                            rd length
  234 00000150 4412            add              r2, r2, r2
  235 00000152 5888            ldr              r0, [r1, r2] ; 
  236 00000154 F100 0001       add              r0, r0, #1
  237 00000158 5088            str              r0, [r1, r2]
  238 0000015A         
  239 0000015A         ; Loop until Thresh Buffer End
  240 0000015A 480B    rho_lcheck
                               ldr              r0, =THRESH_BUFFER_END ; 
  241 0000015C 6800            ldr              r0, [r0]
  242 0000015E 4584            cmp              r12, r0
  243 00000160 DBA4            blt              read_loop
  244 00000162         
  245 00000162 B500            stmdb            sp!, {lr}
  246 00000164 F7FF FFFE       bl               frame_end
  247 00000168 F85D EB04       ldmia            sp!, {lr}
  248 0000016C E8BD 5FFF       ldmia            sp!, {r0-r12,lr}
  249 00000170 4770            bx               lr
  250 00000172                 endp
  251 00000172                 end
              00 00 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp



ARM Macro Assembler    Page 6 


 --apcs=interwork --depend=rho_mod_v1\rho.d -orho_mod_v1\rho.o -I.\RTE\_rho_mod
_v1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\K
eil\STM32L4xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine="_RTE_ SETA
 1" --predefine="STM32L432xx SETA 1" --list=rho.lst ..\Src\rho\rho.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_test 00000000

Symbol: asm_test
   Definitions
      At line 56 in file ..\\Src\\rho\\rho.s
   Uses
      At line 57 in file ..\\Src\\rho\\rho.s
Comment: asm_test used once
dx_store 000000E4

Symbol: dx_store
   Definitions
      At line 185 in file ..\\Src\\rho\\rho.s
   Uses
      At line 179 in file ..\\Src\\rho\\rho.s
Comment: dx_store used once
dy_store 0000013A

Symbol: dy_store
   Definitions
      At line 224 in file ..\\Src\\rho\\rho.s
   Uses
      At line 222 in file ..\\Src\\rho\\rho.s
Comment: dy_store used once
frame_end 0000004C

Symbol: frame_end
   Definitions
      At line 97 in file ..\\Src\\rho\\rho.s
   Uses
      At line 98 in file ..\\Src\\rho\\rho.s
      At line 246 in file ..\\Src\\rho\\rho.s

frame_start 0000003C

Symbol: frame_start
   Definitions
      At line 83 in file ..\\Src\\rho\\rho.s
   Uses
      At line 85 in file ..\\Src\\rho\\rho.s
Comment: frame_start used once
higher 000000D2

Symbol: higher
   Definitions
      At line 180 in file ..\\Src\\rho\\rho.s
   Uses
      At line 174 in file ..\\Src\\rho\\rho.s
Comment: higher used once
inc_qs 0000014A

Symbol: inc_qs
   Definitions
      At line 232 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: inc_qs unused
left 00000130




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: left
   Definitions
      At line 221 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: left unused
no_del 00000102

Symbol: no_del
   Definitions
      At line 200 in file ..\\Src\\rho\\rho.s
   Uses
      At line 167 in file ..\\Src\\rho\\rho.s
Comment: no_del used once
pixel_proc 0000007C

Symbol: pixel_proc
   Definitions
      At line 136 in file ..\\Src\\rho\\rho.s
   Uses
      At line 137 in file ..\\Src\\rho\\rho.s
Comment: pixel_proc used once
pxl_start 0000007C

Symbol: pxl_start
   Definitions
      At line 139 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: pxl_start unused
read_loop 000000AC

Symbol: read_loop
   Definitions
      At line 164 in file ..\\Src\\rho\\rho.s
   Uses
      At line 243 in file ..\\Src\\rho\\rho.s
Comment: read_loop used once
rho 00000000

Symbol: rho
   Definitions
      At line 28 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: rho unused
rho_init 00000038

Symbol: rho_init
   Definitions
      At line 76 in file ..\\Src\\rho\\rho.s
   Uses
      At line 77 in file ..\\Src\\rho\\rho.s
Comment: rho_init used once
rho_lcheck 0000015A

Symbol: rho_lcheck
   Definitions
      At line 240 in file ..\\Src\\rho\\rho.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 195 in file ..\\Src\\rho\\rho.s
      At line 197 in file ..\\Src\\rho\\rho.s
      At line 209 in file ..\\Src\\rho\\rho.s

rho_proc 0000008C

Symbol: rho_proc
   Definitions
      At line 146 in file ..\\Src\\rho\\rho.s
   Uses
      At line 148 in file ..\\Src\\rho\\rho.s
Comment: rho_proc used once
right 00000136

Symbol: right
   Definitions
      At line 223 in file ..\\Src\\rho\\rho.s
   Uses
      At line 220 in file ..\\Src\\rho\\rho.s
Comment: right used once
row_int 00000068

Symbol: row_int
   Definitions
      At line 114 in file ..\\Src\\rho\\rho.s
   Uses
      At line 115 in file ..\\Src\\rho\\rho.s
Comment: row_int used once
row_ret 0000007A

Symbol: row_ret
   Definitions
      At line 132 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: row_ret unused
rx_corr 00000128

Symbol: rx_corr
   Definitions
      At line 217 in file ..\\Src\\rho\\rho.s
   Uses
      At line 206 in file ..\\Src\\rho\\rho.s
      At line 214 in file ..\\Src\\rho\\rho.s

sudo_mod 0000011E

Symbol: sudo_mod
   Definitions
      At line 213 in file ..\\Src\\rho\\rho.s
   Uses
      At line 216 in file ..\\Src\\rho\\rho.s
Comment: sudo_mod used once
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CAMERA_PORT 00000000

Symbol: CAMERA_PORT
   Definitions
      At line 50 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAMERA_PORT unused
CAPTURE_BUFFER 00000000

Symbol: CAPTURE_BUFFER
   Definitions
      At line 34 in file ..\\Src\\rho\\rho.s
   Uses
      At line 86 in file ..\\Src\\rho\\rho.s
      At line 123 in file ..\\Src\\rho\\rho.s
      At line 200 in file ..\\Src\\rho\\rho.s

CAPTURE_BUFFER_END 00000000

Symbol: CAPTURE_BUFFER_END
   Definitions
      At line 44 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAPTURE_BUFFER_END unused
CAPTURE_BUFFER_MAX 00000000

Symbol: CAPTURE_BUFFER_MAX
   Definitions
      At line 45 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAPTURE_BUFFER_MAX unused
CENTROID_X 00000000

Symbol: CENTROID_X
   Definitions
      At line 41 in file ..\\Src\\rho\\rho.s
   Uses
      At line 217 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_X used once
CENTROID_Y 00000000

Symbol: CENTROID_Y
   Definitions
      At line 42 in file ..\\Src\\rho\\rho.s
   Uses
      At line 171 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_Y used once
DENSITY_X 00000000

Symbol: DENSITY_X
   Definitions
      At line 36 in file ..\\Src\\rho\\rho.s
   Uses
      At line 189 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X used once
DENSITY_X_MAX 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: DENSITY_X_MAX
   Definitions
      At line 43 in file ..\\Src\\rho\\rho.s
   Uses
      At line 192 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X_MAX used once
DENSITY_Y 00000000

Symbol: DENSITY_Y
   Definitions
      At line 37 in file ..\\Src\\rho\\rho.s
   Uses
      At line 224 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_Y used once
QUADRANT_BUFFER 00000000

Symbol: QUADRANT_BUFFER
   Definitions
      At line 38 in file ..\\Src\\rho\\rho.s
   Uses
      At line 100 in file ..\\Src\\rho\\rho.s
      At line 170 in file ..\\Src\\rho\\rho.s
      At line 232 in file ..\\Src\\rho\\rho.s

QUADRANT_PREVIOUS 00000000

Symbol: QUADRANT_PREVIOUS
   Definitions
      At line 40 in file ..\\Src\\rho\\rho.s
   Uses
      At line 185 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_PREVIOUS used once
QUADRANT_TOTAL 00000000

Symbol: QUADRANT_TOTAL
   Definitions
      At line 39 in file ..\\Src\\rho\\rho.s
   Uses
      At line 108 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_TOTAL used once
RHO_MEM_END 00000000

Symbol: RHO_MEM_END
   Definitions
      At line 49 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: RHO_MEM_END unused
THRESH_BUFFER 00000000

Symbol: THRESH_BUFFER
   Definitions
      At line 35 in file ..\\Src\\rho\\rho.s
   Uses
      At line 90 in file ..\\Src\\rho\\rho.s
      At line 152 in file ..\\Src\\rho\\rho.s
      At line 159 in file ..\\Src\\rho\\rho.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

THRESH_BUFFER_END 00000000

Symbol: THRESH_BUFFER_END
   Definitions
      At line 46 in file ..\\Src\\rho\\rho.s
   Uses
      At line 156 in file ..\\Src\\rho\\rho.s
      At line 240 in file ..\\Src\\rho\\rho.s

THRESH_BUFFER_MAX 00000000

Symbol: THRESH_BUFFER_MAX
   Definitions
      At line 47 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: THRESH_BUFFER_MAX unused
THRESH_VALUE 00000000

Symbol: THRESH_VALUE
   Definitions
      At line 48 in file ..\\Src\\rho\\rho.s
   Uses
      At line 91 in file ..\\Src\\rho\\rho.s
      At line 117 in file ..\\Src\\rho\\rho.s

printBuffers 00000000

Symbol: printBuffers
   Definitions
      At line 147 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: printBuffers unused
proc_flag 00000000

Symbol: proc_flag
   Definitions
      At line 52 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: proc_flag unused
zero_memory 00000000

Symbol: zero_memory
   Definitions
      At line 84 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: zero_memory unused
20 symbols
378 symbols in table
