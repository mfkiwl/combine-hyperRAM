


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "..\\Src\\rho\\rho.s"
    1 00000000         ; 
    2 00000000         ;
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000         
    7 00000000         
    8 00000000         
    9 00000000         
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         ; 
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000         
   18 00000000         ;#define STATIC_BUFFER
   19 00000000         ;#define BAYER_TOGGLE
   20 00000000         
   21 00000000                 area             rho, code, readonly
   22 00000000                 preserve8
   23 00000000         
   24 00000000         ;extern WR
   25 00000000         ;extern RB
   26 00000000         
   27 00000000                 extern           CAPTURE_BUFFER
   28 00000000                 extern           THRESH_BUFFER
   29 00000000                 extern           DENSITY_X
   30 00000000                 extern           DENSITY_Y
   31 00000000                 extern           QUADRANT_BUFFER
   32 00000000                 extern           QUADRANT_TOTAL
   33 00000000                 extern           QUADRANT_PREVIOUS
   34 00000000                 extern           CENTROID_X
   35 00000000                 extern           CENTROID_Y
   36 00000000                 extern           DENSITY_X_MAX
   37 00000000                 extern           CAPTURE_BUFFER_END
   38 00000000                 extern           CAPTURE_BUFFER_MAX
   39 00000000                 extern           THRESH_BUFFER_END
   40 00000000                 extern           THRESH_BUFFER_MAX
   41 00000000                 extern           THRESH_VALUE
   42 00000000                 extern           RHO_MEM_END
   43 00000000                 extern           CAMERA_PORT
   44 00000000         
   45 00000000                 extern           proc_flag
   46 00000000                 entry
   47 00000000         
   48 00000000                 align
   49 00000000         asm_test
                               proc
   50 00000000                 export           asm_test
   51 00000000 F04F 0000       mov              r0, #0
   52 00000004 F04F 0101       mov              r1, #1
   53 00000008 F04F 0202       mov              r2, #2
   54 0000000C F04F 0303       mov              r3, #3
   55 00000010 F04F 0404       mov              r4, #4
   56 00000014 F04F 0505       mov              r5, #5
   57 00000018 F04F 0606       mov              r6, #6



ARM Macro Assembler    Page 2 


   58 0000001C F04F 0707       mov              r7, #7
   59 00000020 F04F 0808       mov              r8, #8
   60 00000024 F04F 0909       mov              r9, #9
   61 00000028 F04F 0A0A       mov              r10, #10
   62 0000002C F04F 0B0B       mov              r11, #11
   63 00000030 F04F 0C0C       mov              r12, #12
   64 00000034         ;vmov.f32 s24, #24
   65 00000034 4770            bx               lr
   66 00000036                 endp
   67 00000036         
   68 00000036 00 00           align
   69 00000038         rho_init
                               proc
   70 00000038                 export           rho_init
   71 00000038         
   72 00000038 4770            bx               lr
   73 0000003A                 endp
   74 0000003A         
   75 0000003A 00 00           align
   76 0000003C         frame_start
                               proc
   77 0000003C                 import           zero_memory
   78 0000003C                 export           frame_start
   79 0000003C F8DF 912C       ldr              r9, =CAPTURE_BUFFER
   80 00000040         
   81 00000040         
   82 00000040         
   83 00000040 F8DF A12C       ldr              r10, =THRESH_BUFFER ; 
   84 00000044         ;ldr r12, =THRESH_BUFFER      ; 
   85 00000044 484B            ldr              r0, =THRESH_VALUE ; 
   86 00000046 F8D0 B000       ldr              r11, [r0]
   87 0000004A 4770            bx               lr
   88 0000004C                 endp
   89 0000004C         
   90 0000004C                 align
   91 0000004C         frame_end
                               proc
   92 0000004C                 export           frame_end
   93 0000004C         ; Add the four quadrants into QUADRANT_TOTAL
   94 0000004C 484A            ldr              r0, =QUADRANT_BUFFER ; 
   95 0000004E F850 2B04       ldr              r2, [r0], #4 ; 
   96 00000052 F850 1B04       ldr              r1, [r0], #4
   97 00000056 440A            add              r2, r2, r1
   98 00000058 F850 1B04       ldr              r1, [r0], #4
   99 0000005C 440A            add              r2, r2, r1
  100 0000005E 6801            ldr              r1, [r0]
  101 00000060 440A            add              r2, r2, r1
  102 00000062 4846            ldr              r0, =QUADRANT_TOTAL
  103 00000064 6002            str              r2, [r0]
  104 00000066 4770            bx               lr
  105 00000068                 endp
  106 00000068         
  107 00000068                 align
  108 00000068         row_int proc
  109 00000068                 export           row_int
  110 00000068         
  111 00000068 4842            ldr              r0, =THRESH_VALUE ; 
  112 0000006A F8D0 B000       ldr              r11, [r0]
  113 0000006E         



ARM Macro Assembler    Page 3 


  114 0000006E         ; Store Y delimiter in thresh buffer
  115 0000006E F64A 20AA       mov              r0, #0xaaaa ; 
  116 00000072 F82A 0B02       strh             r0, [r10], #2 ; 
  117 00000076 483D            ldr              r0, =CAPTURE_BUFFER
  118 00000078 4648            mov              r0, r9
  119 0000007A         
  120 0000007A         #line   126              "..\\Src\\rho\\rho.s"
  126 0000007A 4770    row_ret bx               lr
  127 0000007C                 endp
  128 0000007C         
  129 0000007C                 align
  130 0000007C         pixel_proc
                               proc
  131 0000007C                 export           pixel_proc
  132 0000007C         
  133 0000007C F819 3B01 
                       pxl_start
                               ldrb             r3, [r9], #1 ; 
  134 00000080 455B            cmp              r3, r11     ; 
  135 00000082 BFA8 F82A 
              9B02             strgeh           r9, [r10], #2 ; 
  136 00000088 4770            bx               lr
  137 0000008A                 endp
  138 0000008A         
  139 0000008A 00 00           align
  140 0000008C         rho_proc
                               proc
  141 0000008C                 import           printBuffers
  142 0000008C                 export           rho_proc
  143 0000008C E92D 5FFF       stmdb            sp!, {r0-r12,lr}
  144 00000090 483B            ldr              r0, =THRESH_BUFFER_END ; Set fi
                                                            nal end of thresh b
                                                            uffer for frame
  145 00000092 F8C0 A000       str              r10, [r0]
  146 00000096         
  147 00000096 F8DF C0D8       ldr              r12, =THRESH_BUFFER
  148 0000009A F04F 0600       mov              r6, #0      ; 
  149 0000009E F04F 0700       mov              r7, #0
  150 000000A2 F04F 0800       mov              r8, #0
  151 000000A6         
  152 000000A6 F83C 6B02 
                       read_loop
                               ldrh             r6, [r12], #2 ; 
  153 000000AA F64A 20AA       mov              r0, #0xaaaa
  154 000000AE 4286            cmp              r6, r0      ; 
  155 000000B0 D124            bne              no_del
  156 000000B2         
  157 000000B2         ; Process Row
  158 000000B2 4831            ldr              r0, =QUADRANT_BUFFER
  159 000000B4 4933            ldr              r1, =CENTROID_Y
  160 000000B6 8809            ldrh             r1, [r1]
  161 000000B8 428F            cmp              r7, r1      ; 
  162 000000BA DA07            bge              higher
  163 000000BC F008 08FD       and              r8, r8, #0xfd ; 
  164 000000C0 F850 1B04       ldr              r1, [r0], #4 ; 
  165 000000C4 6802            ldr              r2, [r0]
  166 000000C6 EB01 0002       add              r0, r1, r2
  167 000000CA E008            b                dx_store
  168 000000CC F048 0802 



ARM Macro Assembler    Page 4 


                       higher  orr              r8, r8, #0x02 ; 
  169 000000D0 F100 0008       add              r0, r0, #8  ; 
  170 000000D4 F850 1B04       ldr              r1, [r0], #4
  171 000000D8 6802            ldr              r2, [r0]
  172 000000DA EB01 0002       add              r0, r1, r2  ; Calculate QN into
                                                             r0
  173 000000DE 492A    dx_store
                               ldr              r1, =QUADRANT_PREVIOUS
  174 000000E0 680A            ldr              r2, [r1]    ; 
  175 000000E2 6008            str              r0, [r1]    ; 
  176 000000E4 EBA0 0002       sub              r0, r0, r2  ; Calculate QN - QP
                                                             into r0
  177 000000E8 4A28            ldr              r2, =DENSITY_X
  178 000000EA 51D0            str              r0, [r2, r7]
  179 000000EC F107 0704       add              r7, r7, #4
  180 000000F0 4B27            ldr              r3, =DENSITY_X_MAX ; 
  181 000000F2 681A            ldr              r2, [r3]
  182 000000F4 4290            cmp              r0, r2
  183 000000F6 DD2D            ble              rho_lcheck  ; Contiunue (to qua
                                                            drant increment) if
                                                             less than or equal
                                                            
  184 000000F8 6018            str              r0, [r3]    ; Store as new max 
                                                            if greater
  185 000000FA E02B            b                rho_lcheck
  186 000000FC         
  187 000000FC         ; Process Pixel
  188 000000FC 481B    no_del  ldr              r0, =CAPTURE_BUFFER ; Load capt
                                                            ure buffer to corre
                                                            ct offset
  189 000000FE F64F 71FF       mov              r1, #0x0000ffff
  190 00000102 EA00 0001       and              r0, r0, r1  ; Keep bottom half 
                                                            in r0
  191 00000106 4286            cmp              r6, r0
  192 00000108         
  193 00000108 E00B            b                rx_corr
  194 0000010A         
  195 0000010A DB23            blt              rho_lcheck  ; Check for valid v
                                                            alue
  196 0000010C EBA6 0600       sub              r6, r6, r0  ; Remove address of
                                                            fset from r6
  197 00000110 F1A6 0601       sub              r6, r6, #1
  198 00000114 F04F 00A0       mov              r0, #160
  199 00000118 4286    sudo_mod
                               cmp              r6, r0
  200 0000011A DB02            blt              rx_corr
  201 0000011C EBA6 0600       sub              r6, r6, r0
  202 00000120 E7FA            b                sudo_mod
  203 00000122 491C    rx_corr ldr              r1, =CENTROID_X
  204 00000124 8809            ldrh             r1, [r1]
  205 00000126 428E            cmp              r6, r1      ; 
  206 00000128 DA02            bge              right
  207 0000012A F008 08FE 
                       left    and              r8, r8, #0xfe ; 
  208 0000012E E001            b                dy_store
  209 00000130 F048 0801 
                       right   orr              r8, r8, #0x01 ; 
  210 00000134 4918    dy_store
                               ldr              r1, =DENSITY_Y



ARM Macro Assembler    Page 5 


  211 00000136 EB06 0206       add              r2, r6, r6  ; Calcalute r6 x4 i
                                                            nto r2
  212 0000013A 4412            add              r2, r2, r2  ; (r6 is byte width
                                                             while Dx is word w
                                                            idth)
  213 0000013C 5888            ldr              r0, [r1, r2] ; 
  214 0000013E F100 0001       add              r0, r0, #1
  215 00000142 5088            str              r0, [r1, r2]
  216 00000144         
  217 00000144         ; Increment Quandrants
  218 00000144 490C    inc_qs  ldr              r1, =QUADRANT_BUFFER
  219 00000146 EB08 0208       add              r2, r8, r8  ; Multiply r8 by wo
                                                            rd length
  220 0000014A 4412            add              r2, r2, r2
  221 0000014C 5888            ldr              r0, [r1, r2] ; 
  222 0000014E F100 0001       add              r0, r0, #1
  223 00000152 5088            str              r0, [r1, r2]
  224 00000154         
  225 00000154         ; Loop until Thresh Buffer End
  226 00000154 480A    rho_lcheck
                               ldr              r0, =THRESH_BUFFER_END ; 
  227 00000156 6800            ldr              r0, [r0]
  228 00000158 4584            cmp              r12, r0
  229 0000015A DBA4            blt              read_loop
  230 0000015C         
  231 0000015C B500            stmdb            sp!, {lr}
  232 0000015E F7FF FFFE       bl               frame_end
  233 00000162 F85D EB04       ldmia            sp!, {lr}
  234 00000166 E8BD 5FFF       ldmia            sp!, {r0-r12,lr}
  235 0000016A 4770            bx               lr
  236 0000016C                 endp
  237 0000016C                 end
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp
 --apcs=interwork --depend=rho_mod_v1\rho.d -orho_mod_v1\rho.o -I.\RTE\_rho_mod
_v1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\K
eil\STM32L4xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include --predefine="
__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefine="_RTE_ SETA
 1" --predefine="STM32L432xx SETA 1" --list=rho.lst ..\Src\rho\rho.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_test 00000000

Symbol: asm_test
   Definitions
      At line 49 in file ..\\Src\\rho\\rho.s
   Uses
      At line 50 in file ..\\Src\\rho\\rho.s
Comment: asm_test used once
dx_store 000000DE

Symbol: dx_store
   Definitions
      At line 173 in file ..\\Src\\rho\\rho.s
   Uses
      At line 167 in file ..\\Src\\rho\\rho.s
Comment: dx_store used once
dy_store 00000134

Symbol: dy_store
   Definitions
      At line 210 in file ..\\Src\\rho\\rho.s
   Uses
      At line 208 in file ..\\Src\\rho\\rho.s
Comment: dy_store used once
frame_end 0000004C

Symbol: frame_end
   Definitions
      At line 91 in file ..\\Src\\rho\\rho.s
   Uses
      At line 92 in file ..\\Src\\rho\\rho.s
      At line 232 in file ..\\Src\\rho\\rho.s

frame_start 0000003C

Symbol: frame_start
   Definitions
      At line 76 in file ..\\Src\\rho\\rho.s
   Uses
      At line 78 in file ..\\Src\\rho\\rho.s
Comment: frame_start used once
higher 000000CC

Symbol: higher
   Definitions
      At line 168 in file ..\\Src\\rho\\rho.s
   Uses
      At line 162 in file ..\\Src\\rho\\rho.s
Comment: higher used once
inc_qs 00000144

Symbol: inc_qs
   Definitions
      At line 218 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: inc_qs unused
left 0000012A




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: left
   Definitions
      At line 207 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: left unused
no_del 000000FC

Symbol: no_del
   Definitions
      At line 188 in file ..\\Src\\rho\\rho.s
   Uses
      At line 155 in file ..\\Src\\rho\\rho.s
Comment: no_del used once
pixel_proc 0000007C

Symbol: pixel_proc
   Definitions
      At line 130 in file ..\\Src\\rho\\rho.s
   Uses
      At line 131 in file ..\\Src\\rho\\rho.s
Comment: pixel_proc used once
pxl_start 0000007C

Symbol: pxl_start
   Definitions
      At line 133 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: pxl_start unused
read_loop 000000A6

Symbol: read_loop
   Definitions
      At line 152 in file ..\\Src\\rho\\rho.s
   Uses
      At line 229 in file ..\\Src\\rho\\rho.s
Comment: read_loop used once
rho 00000000

Symbol: rho
   Definitions
      At line 21 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: rho unused
rho_init 00000038

Symbol: rho_init
   Definitions
      At line 69 in file ..\\Src\\rho\\rho.s
   Uses
      At line 70 in file ..\\Src\\rho\\rho.s
Comment: rho_init used once
rho_lcheck 00000154

Symbol: rho_lcheck
   Definitions
      At line 226 in file ..\\Src\\rho\\rho.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 183 in file ..\\Src\\rho\\rho.s
      At line 185 in file ..\\Src\\rho\\rho.s
      At line 195 in file ..\\Src\\rho\\rho.s

rho_proc 0000008C

Symbol: rho_proc
   Definitions
      At line 140 in file ..\\Src\\rho\\rho.s
   Uses
      At line 142 in file ..\\Src\\rho\\rho.s
Comment: rho_proc used once
right 00000130

Symbol: right
   Definitions
      At line 209 in file ..\\Src\\rho\\rho.s
   Uses
      At line 206 in file ..\\Src\\rho\\rho.s
Comment: right used once
row_int 00000068

Symbol: row_int
   Definitions
      At line 108 in file ..\\Src\\rho\\rho.s
   Uses
      At line 109 in file ..\\Src\\rho\\rho.s
Comment: row_int used once
row_ret 0000007A

Symbol: row_ret
   Definitions
      At line 126 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: row_ret unused
rx_corr 00000122

Symbol: rx_corr
   Definitions
      At line 203 in file ..\\Src\\rho\\rho.s
   Uses
      At line 193 in file ..\\Src\\rho\\rho.s
      At line 200 in file ..\\Src\\rho\\rho.s

sudo_mod 00000118

Symbol: sudo_mod
   Definitions
      At line 199 in file ..\\Src\\rho\\rho.s
   Uses
      At line 202 in file ..\\Src\\rho\\rho.s
Comment: sudo_mod used once
21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CAMERA_PORT 00000000

Symbol: CAMERA_PORT
   Definitions
      At line 43 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAMERA_PORT unused
CAPTURE_BUFFER 00000000

Symbol: CAPTURE_BUFFER
   Definitions
      At line 27 in file ..\\Src\\rho\\rho.s
   Uses
      At line 79 in file ..\\Src\\rho\\rho.s
      At line 117 in file ..\\Src\\rho\\rho.s
      At line 188 in file ..\\Src\\rho\\rho.s

CAPTURE_BUFFER_END 00000000

Symbol: CAPTURE_BUFFER_END
   Definitions
      At line 37 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAPTURE_BUFFER_END unused
CAPTURE_BUFFER_MAX 00000000

Symbol: CAPTURE_BUFFER_MAX
   Definitions
      At line 38 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAPTURE_BUFFER_MAX unused
CENTROID_X 00000000

Symbol: CENTROID_X
   Definitions
      At line 34 in file ..\\Src\\rho\\rho.s
   Uses
      At line 203 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_X used once
CENTROID_Y 00000000

Symbol: CENTROID_Y
   Definitions
      At line 35 in file ..\\Src\\rho\\rho.s
   Uses
      At line 159 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_Y used once
DENSITY_X 00000000

Symbol: DENSITY_X
   Definitions
      At line 29 in file ..\\Src\\rho\\rho.s
   Uses
      At line 177 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X used once
DENSITY_X_MAX 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: DENSITY_X_MAX
   Definitions
      At line 36 in file ..\\Src\\rho\\rho.s
   Uses
      At line 180 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X_MAX used once
DENSITY_Y 00000000

Symbol: DENSITY_Y
   Definitions
      At line 30 in file ..\\Src\\rho\\rho.s
   Uses
      At line 210 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_Y used once
QUADRANT_BUFFER 00000000

Symbol: QUADRANT_BUFFER
   Definitions
      At line 31 in file ..\\Src\\rho\\rho.s
   Uses
      At line 94 in file ..\\Src\\rho\\rho.s
      At line 158 in file ..\\Src\\rho\\rho.s
      At line 218 in file ..\\Src\\rho\\rho.s

QUADRANT_PREVIOUS 00000000

Symbol: QUADRANT_PREVIOUS
   Definitions
      At line 33 in file ..\\Src\\rho\\rho.s
   Uses
      At line 173 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_PREVIOUS used once
QUADRANT_TOTAL 00000000

Symbol: QUADRANT_TOTAL
   Definitions
      At line 32 in file ..\\Src\\rho\\rho.s
   Uses
      At line 102 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_TOTAL used once
RHO_MEM_END 00000000

Symbol: RHO_MEM_END
   Definitions
      At line 42 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: RHO_MEM_END unused
THRESH_BUFFER 00000000

Symbol: THRESH_BUFFER
   Definitions
      At line 28 in file ..\\Src\\rho\\rho.s
   Uses
      At line 83 in file ..\\Src\\rho\\rho.s
      At line 147 in file ..\\Src\\rho\\rho.s

THRESH_BUFFER_END 00000000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols


Symbol: THRESH_BUFFER_END
   Definitions
      At line 39 in file ..\\Src\\rho\\rho.s
   Uses
      At line 144 in file ..\\Src\\rho\\rho.s
      At line 226 in file ..\\Src\\rho\\rho.s

THRESH_BUFFER_MAX 00000000

Symbol: THRESH_BUFFER_MAX
   Definitions
      At line 40 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: THRESH_BUFFER_MAX unused
THRESH_VALUE 00000000

Symbol: THRESH_VALUE
   Definitions
      At line 41 in file ..\\Src\\rho\\rho.s
   Uses
      At line 85 in file ..\\Src\\rho\\rho.s
      At line 111 in file ..\\Src\\rho\\rho.s

printBuffers 00000000

Symbol: printBuffers
   Definitions
      At line 141 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: printBuffers unused
proc_flag 00000000

Symbol: proc_flag
   Definitions
      At line 45 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: proc_flag unused
zero_memory 00000000

Symbol: zero_memory
   Definitions
      At line 77 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: zero_memory unused
20 symbols
378 symbols in table
