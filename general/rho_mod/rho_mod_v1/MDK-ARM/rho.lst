


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "..\\Src\\rho\\rho.s"
    1 00000000         ; 
    2 00000000         ;
    3 00000000         #line   12               "..\\Src\\rho\\rho.s"
   12 00000000         
   13 00000000         ; 
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000                 area             rho, code, readonly
   22 00000000                 preserve8
   23 00000000         
   24 00000000                 extern           CAPTURE_BUFFER
   25 00000000                 extern           THRESH_BUFFER
   26 00000000                 extern           DENSITY_X
   27 00000000                 extern           DENSITY_Y
   28 00000000                 extern           QUADRANT_BUFFER
   29 00000000                 extern           QUADRANT_TOTAL
   30 00000000                 extern           QUADRANT_PREVIOUS
   31 00000000                 extern           CENTROID_X
   32 00000000                 extern           CENTROID_Y
   33 00000000                 extern           DENSITY_X_MAX
   34 00000000                 extern           CAPTURE_BUFFER_END
   35 00000000                 extern           CAPTURE_BUFFER_MAX
   36 00000000                 extern           THRESH_BUFFER_END
   37 00000000                 extern           THRESH_BUFFER_MAX
   38 00000000                 extern           THRESH_VALUE
   39 00000000                 extern           RHO_MEM_END
   40 00000000                 extern           CAMERA_PORT
   41 00000000         
   42 00000000                 extern           proc_flag
   43 00000000                 entry
   44 00000000         
   45 00000000                 align
   46 00000000         asm_test
                               proc
   47 00000000                 export           asm_test
   48 00000000 4F71            ldr              r7, =THRESH_BUFFER
   49 00000002 F8DF 81C4       ldr              r8, =THRESH_BUFFER
   50 00000006 F64A 22AA       mov              r2, #0xaaaa
   51 0000000A F827 2B02 
                       add_row strh             r2, [r7], #2
   52 0000000E F04F 0101       mov              r1, #1
   53 00000012 486E            ldr              r0, =THRESH_BUFFER_MAX ; 
   54 00000014 6800            ldr              r0, [r0]
   55 00000016         
   56 00000016 F827 1B02 
                       fill_buff
                               strh             r1, [r7], #2
   57 0000001A F101 0101       add              r1, r1, #1
   58 0000001E F011 0F01       tst              r1, #1
   59 00000022 D101            bne              nonl
   60 00000024 F827 2B02       strh             r2, [r7], #2
   61 00000028 4287    nonl    cmp              r7, r0
   62 0000002A DBF4            blt              fill_buff



ARM Macro Assembler    Page 2 


   63 0000002C E7FE            b                rho_process
   64 0000002E 4770            bx               lr
   65 00000030                 endp
   66 00000030         
   67 00000030                 align
   68 00000030         rho_init
                               proc
   69 00000030                 export           rho_init
   70 00000030         
   71 00000030 4770            bx               lr
   72 00000032                 endp
   73 00000032         
   74 00000032 00 00           align
   75 00000034         frame_start
                               proc
   76 00000034                 import           zero_memory
   77 00000034                 export           frame_start
   78 00000034 B500            stmdb            sp!, {lr}
   79 00000036 F7FF FFFE       bl               zero_memory
   80 0000003A F85D EB04       ldmia            sp!, {lr}
   81 0000003E F04F 0601       mov              r6, #1      ; 
   82 00000042 F8DF 918C       ldr              r9, =CAPTURE_BUFFER
   83 00000046         
   84 00000046         
   85 00000046 F109 0901       add              r9, r9, #1
   86 0000004A         
   87 0000004A         
   88 0000004A 4F5F            ldr              r7, =THRESH_BUFFER ; 
   89 0000004C F8DF 8178       ldr              r8, =THRESH_BUFFER ; 
   90 00000050 4860            ldr              r0, =THRESH_VALUE ; 
   91 00000052 6805            ldr              r5, [r0]
   92 00000054         
   93 00000054         ; Set process flag
   94 00000054 4860            ldr              r0, =proc_flag
   95 00000056 F04F 0101       mov              r1, #1
   96 0000005A 6001            str              r1, [r0]
   97 0000005C         
   98 0000005C 4770            bx               lr
   99 0000005E                 endp
  100 0000005E         
  101 0000005E 00 00           align
  102 00000060         frame_end
                               proc
  103 00000060                 export           frame_end
  104 00000060         ; Add the four quadrants into QUADRANT_TOTAL
  105 00000060 485E            ldr              r0, =QUADRANT_BUFFER ; 
  106 00000062 F850 2B04       ldr              r2, [r0], #4 ; 
  107 00000066 F850 1B04       ldr              r1, [r0], #4
  108 0000006A 440A            add              r2, r2, r1
  109 0000006C F850 1B04       ldr              r1, [r0], #4
  110 00000070 440A            add              r2, r2, r1
  111 00000072 6801            ldr              r1, [r0]
  112 00000074 440A            add              r2, r2, r1
  113 00000076 485A            ldr              r0, =QUADRANT_TOTAL
  114 00000078 6002            str              r2, [r0]
  115 0000007A         ; Reset process flag
  116 0000007A 4857            ldr              r0, =proc_flag
  117 0000007C F04F 0100       mov              r1, #0
  118 00000080 6001            str              r1, [r0]



ARM Macro Assembler    Page 3 


  119 00000082 4770            bx               lr
  120 00000084                 endp
  121 00000084         
  122 00000084                 align
  123 00000084         row_int proc
  124 00000084                 export           row_int
  125 00000084         
  126 00000084         
  127 00000084         ; Increment end of capture buffer if static
  128 00000084 4957            ldr              r1, =CAPTURE_BUFFER_END
  129 00000086 6808            ldr              r0, [r1]
  130 00000088 F04F 020A       mov              r2, #10
  131 0000008C EA4F 0242       lsl              r2, #1
  132 00000090 4410            add              r0, r0, r2
  133 00000092 6008            str              r0, [r1]
  134 00000094         
  135 00000094         
  136 00000094         
  137 00000094         
  138 00000094         
  139 00000094         ; Store Y delimiter in thresh buffer
  140 00000094 F64A 20AA       mov              r0, #0xaaaa ; 
  141 00000098 F827 0B02       strh             r0, [r7], #2 ; 
  142 0000009C         
  143 0000009C F016 0F01       tst              r6, #1      ; 
  144 000000A0 D102            bne              rg_row
  145 000000A2 F109 0901       add              r9, r9, #1  ; 
  146 000000A6 E001            b                check_rmax
  147 000000A8         
  148 000000A8 F1A9 0901 
                       rg_row  sub              r9, r9, #1  ; 
  149 000000AC         
  150 000000AC         
  151 000000AC         
  152 000000AC         
  153 000000AC 484E    check_rmax
                               ldr              r0, =CAPTURE_BUFFER_MAX
  154 000000AE 6800            ldr              r0, [r0]
  155 000000B0 4581            cmp              r9, r0      ; 
  156 000000B2 DB02            blt              not_done
  157 000000B4         
  158 000000B4 484D            ldr              r0, =THRESH_BUFFER_END ; Set fi
                                                            nal end of thresh b
                                                            uffer for frame
  159 000000B6 6007            str              r7, [r0]
  160 000000B8 E7FE            b                rho_process
  161 000000BA         
  162 000000BA BF00    not_done
                               nop
  163 000000BC         
  164 000000BC F086 0601       eor              r6, r6, #1  ; 
  165 000000C0         
  166 000000C0 4770            bx               lr
  167 000000C2                 endp
  168 000000C2         
  169 000000C2 00 00           align
  170 000000C4         pclk_int
                               proc
  171 000000C4                 export           pclk_int



ARM Macro Assembler    Page 4 


  172 000000C4 4943            ldr              r1, =THRESH_VALUE ; 
  173 000000C6 680D            ldr              r5, [r1]
  174 000000C8         
  175 000000C8 F819 3B02 
                       pclk_start
                               ldrb             r3, [r9], #2 ; 
  176 000000CC 42AB            cmp              r3, r5      ; 
  177 000000CE BFA8 F827 
              9B02             strgeh           r9, [r7], #2 ; 
  178 000000D4         
  179 000000D4 4943            ldr              r1, =CAPTURE_BUFFER_END
  180 000000D6 6808            ldr              r0, [r1]
  181 000000D8 4581            cmp              r9, r0
  182 000000DA DBF5            blt              pclk_start
  183 000000DC 4770            bx               lr
  184 000000DE                 endp
  185 000000DE         
  186 000000DE 00 00           align
  187 000000E0         rho_process
                               proc
  188 000000E0                 import           printBuffers
  189 000000E0                 export           rho_process
  190 000000E0 F04F 0A00       mov              r10, #0     ; 
  191 000000E4 F04F 0B00       mov              r11, #0
  192 000000E8 F04F 0C00       mov              r12, #0
  193 000000EC         
  194 000000EC F838 AB02 
                       read_loop
                               ldrh             r10, [r8], #2 ; 
  195 000000F0 F64A 20AA       mov              r0, #0xaaaa
  196 000000F4 4582            cmp              r10, r0     ; 
  197 000000F6 D125            bne              no_del
  198 000000F8         
  199 000000F8         ; Process Row
  200 000000F8 4838            ldr              r0, =QUADRANT_BUFFER
  201 000000FA 493D            ldr              r1, =CENTROID_Y
  202 000000FC 8809            ldrh             r1, [r1]
  203 000000FE 458B            cmp              r11, r1     ; 
  204 00000100 DA07            bge              higher
  205 00000102 F00C 0CFD       and              r12, r12, #0xfd ; 
  206 00000106 F850 1B04       ldr              r1, [r0], #4 ; 
  207 0000010A 6802            ldr              r2, [r0]
  208 0000010C EB01 0002       add              r0, r1, r2
  209 00000110 E008            b                dx_store
  210 00000112 F04C 0C02 
                       higher  orr              r12, r12, #0x02 ; 
  211 00000116 F100 0008       add              r0, r0, #8  ; 
  212 0000011A F850 1B04       ldr              r1, [r0], #4
  213 0000011E 6802            ldr              r2, [r0]
  214 00000120 EB01 0002       add              r0, r1, r2  ; Calculate QN into
                                                             r0
  215 00000124 4933    dx_store
                               ldr              r1, =QUADRANT_PREVIOUS
  216 00000126 680A            ldr              r2, [r1]    ; 
  217 00000128 6008            str              r0, [r1]    ; 
  218 0000012A EBA0 0002       sub              r0, r0, r2  ; Calculate QN - QP
                                                             into r0
  219 0000012E 4A32            ldr              r2, =DENSITY_X
  220 00000130 F842 000B       str              r0, [r2, r11]



ARM Macro Assembler    Page 5 


  221 00000134 F10B 0B04       add              r11, r11, #4
  222 00000138 4B30            ldr              r3, =DENSITY_X_MAX ; 
  223 0000013A 681A            ldr              r2, [r3]
  224 0000013C 4290            cmp              r0, r2
  225 0000013E DD2C            ble              rho_lcheck  ; Contiunue (to qua
                                                            drant increment) if
                                                             less than or equal
                                                            
  226 00000140 6018            str              r0, [r3]    ; Store as new max 
                                                            if greater
  227 00000142 E02A            b                rho_lcheck
  228 00000144         
  229 00000144         ; Process Pixel
  230 00000144 4822    no_del  ldr              r0, =CAPTURE_BUFFER ; Load capt
                                                            ure buffer to corre
                                                            ct offset
  231 00000146 F64F 71FF       mov              r1, #0x0000ffff
  232 0000014A EA00 0001       and              r0, r0, r1  ; Keep bottom half 
                                                            in r0
  233 0000014E 4582            cmp              r10, r0
  234 00000150 DB23            blt              rho_lcheck  ; Check for valid v
                                                            alue
  235 00000152 EBAA 0A00       sub              r10, r10, r0 ; Remove address o
                                                            ffset from r10
  236 00000156 F1AA 0A01       sub              r10, r10, #1
  237 0000015A F04F 000A       mov              r0, #10
  238 0000015E 4582    sudo_mod
                               cmp              r10, r0
  239 00000160 DB02            blt              rx_corr
  240 00000162 EBAA 0A00       sub              r10, r10, r0
  241 00000166 E7FA            b                sudo_mod
  242 00000168 4925    rx_corr ldr              r1, =CENTROID_X
  243 0000016A 8809            ldrh             r1, [r1]
  244 0000016C 458A            cmp              r10, r1     ; 
  245 0000016E DA02            bge              right
  246 00000170 F00C 0CFE 
                       left    and              r12, r12, #0xfe ; 
  247 00000174 E001            b                dy_store
  248 00000176 F04C 0C01 
                       right   orr              r12, r12, #0x01 ; 
  249 0000017A 4922    dy_store
                               ldr              r1, =DENSITY_Y
  250 0000017C EB0A 020A       add              r2, r10, r10 ; Calcalute r10 x4
                                                             into r2
  251 00000180 4412            add              r2, r2, r2  ; (r10 is byte widt
                                                            h while Dx is word 
                                                            width)
  252 00000182 5888            ldr              r0, [r1, r2] ; 
  253 00000184 F100 0001       add              r0, r0, #1
  254 00000188 5088            str              r0, [r1, r2]
  255 0000018A         
  256 0000018A         ; Increment Quandrants
  257 0000018A 4914    inc_qs  ldr              r1, =QUADRANT_BUFFER
  258 0000018C EB0C 020C       add              r2, r12, r12 ; Multiply r12 by 
                                                            word length
  259 00000190 4412            add              r2, r2, r2
  260 00000192 5888            ldr              r0, [r1, r2] ; 
  261 00000194 F100 0001       add              r0, r0, #1
  262 00000198 5088            str              r0, [r1, r2]



ARM Macro Assembler    Page 6 


  263 0000019A         
  264 0000019A         ; Loop until Thresh Buffer End
  265 0000019A 4814    rho_lcheck
                               ldr              r0, =THRESH_BUFFER_END ; 
  266 0000019C 6800            ldr              r0, [r0]
  267 0000019E 4580            cmp              r8, r0
  268 000001A0 DBA4            blt              read_loop
  269 000001A2         
  270 000001A2 B500            stmdb            sp!, {lr}
  271 000001A4 F7FF FFFE       bl               frame_end
  272 000001A8 4810            ldr              r0, =THRESH_BUFFER_END
  273 000001AA 6800            ldr              r0, [r0]
  274 000001AC 4906            ldr              r1, =THRESH_BUFFER
  275 000001AE EBA0 0001       sub              r0, r0, r1
  276 000001B2 EA4F 0050       lsr              r0, #1
  277 000001B6 F1A0 0001       sub              r0, r0, #1
  278 000001BA F04F 010A       mov              r1, #10
  279 000001BE F7FF FFFE       bl               printBuffers
  280 000001C2 F85D EB04       ldmia            sp!, {lr}
  281 000001C6 4770            bx               lr
  282 000001C8                 endp
  283 000001C8                 end
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp
 --apcs=interwork --depend=rho_mod_v1\rho.d -orho_mod_v1\rho.o -I.\RTE\_rho_mod
_v1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\K
eil\STM32L4xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include --predefine="
__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION S
ETA 524" --predefine="_RTE_ SETA 1" --predefine="STM32L432xx SETA 1" --list=rho
.lst ..\Src\rho\rho.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

add_row 0000000A

Symbol: add_row
   Definitions
      At line 51 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: add_row unused
asm_test 00000000

Symbol: asm_test
   Definitions
      At line 46 in file ..\\Src\\rho\\rho.s
   Uses
      At line 47 in file ..\\Src\\rho\\rho.s
Comment: asm_test used once
check_rmax 000000AC

Symbol: check_rmax
   Definitions
      At line 153 in file ..\\Src\\rho\\rho.s
   Uses
      At line 146 in file ..\\Src\\rho\\rho.s
Comment: check_rmax used once
dx_store 00000124

Symbol: dx_store
   Definitions
      At line 215 in file ..\\Src\\rho\\rho.s
   Uses
      At line 209 in file ..\\Src\\rho\\rho.s
Comment: dx_store used once
dy_store 0000017A

Symbol: dy_store
   Definitions
      At line 249 in file ..\\Src\\rho\\rho.s
   Uses
      At line 247 in file ..\\Src\\rho\\rho.s
Comment: dy_store used once
fill_buff 00000016

Symbol: fill_buff
   Definitions
      At line 56 in file ..\\Src\\rho\\rho.s
   Uses
      At line 62 in file ..\\Src\\rho\\rho.s
Comment: fill_buff used once
frame_end 00000060

Symbol: frame_end
   Definitions
      At line 102 in file ..\\Src\\rho\\rho.s
   Uses
      At line 103 in file ..\\Src\\rho\\rho.s
      At line 271 in file ..\\Src\\rho\\rho.s

frame_start 00000034




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: frame_start
   Definitions
      At line 75 in file ..\\Src\\rho\\rho.s
   Uses
      At line 77 in file ..\\Src\\rho\\rho.s
Comment: frame_start used once
higher 00000112

Symbol: higher
   Definitions
      At line 210 in file ..\\Src\\rho\\rho.s
   Uses
      At line 204 in file ..\\Src\\rho\\rho.s
Comment: higher used once
inc_qs 0000018A

Symbol: inc_qs
   Definitions
      At line 257 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: inc_qs unused
left 00000170

Symbol: left
   Definitions
      At line 246 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: left unused
no_del 00000144

Symbol: no_del
   Definitions
      At line 230 in file ..\\Src\\rho\\rho.s
   Uses
      At line 197 in file ..\\Src\\rho\\rho.s
Comment: no_del used once
nonl 00000028

Symbol: nonl
   Definitions
      At line 61 in file ..\\Src\\rho\\rho.s
   Uses
      At line 59 in file ..\\Src\\rho\\rho.s
Comment: nonl used once
not_done 000000BA

Symbol: not_done
   Definitions
      At line 162 in file ..\\Src\\rho\\rho.s
   Uses
      At line 156 in file ..\\Src\\rho\\rho.s
Comment: not_done used once
pclk_int 000000C4

Symbol: pclk_int
   Definitions
      At line 170 in file ..\\Src\\rho\\rho.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 171 in file ..\\Src\\rho\\rho.s
Comment: pclk_int used once
pclk_start 000000C8

Symbol: pclk_start
   Definitions
      At line 175 in file ..\\Src\\rho\\rho.s
   Uses
      At line 182 in file ..\\Src\\rho\\rho.s
Comment: pclk_start used once
read_loop 000000EC

Symbol: read_loop
   Definitions
      At line 194 in file ..\\Src\\rho\\rho.s
   Uses
      At line 268 in file ..\\Src\\rho\\rho.s
Comment: read_loop used once
rg_row 000000A8

Symbol: rg_row
   Definitions
      At line 148 in file ..\\Src\\rho\\rho.s
   Uses
      At line 144 in file ..\\Src\\rho\\rho.s
Comment: rg_row used once
rho 00000000

Symbol: rho
   Definitions
      At line 21 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: rho unused
rho_init 00000030

Symbol: rho_init
   Definitions
      At line 68 in file ..\\Src\\rho\\rho.s
   Uses
      At line 69 in file ..\\Src\\rho\\rho.s
Comment: rho_init used once
rho_lcheck 0000019A

Symbol: rho_lcheck
   Definitions
      At line 265 in file ..\\Src\\rho\\rho.s
   Uses
      At line 225 in file ..\\Src\\rho\\rho.s
      At line 227 in file ..\\Src\\rho\\rho.s
      At line 234 in file ..\\Src\\rho\\rho.s

rho_process 000000E0

Symbol: rho_process
   Definitions
      At line 187 in file ..\\Src\\rho\\rho.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 63 in file ..\\Src\\rho\\rho.s
      At line 160 in file ..\\Src\\rho\\rho.s
      At line 189 in file ..\\Src\\rho\\rho.s

right 00000176

Symbol: right
   Definitions
      At line 248 in file ..\\Src\\rho\\rho.s
   Uses
      At line 245 in file ..\\Src\\rho\\rho.s
Comment: right used once
row_int 00000084

Symbol: row_int
   Definitions
      At line 123 in file ..\\Src\\rho\\rho.s
   Uses
      At line 124 in file ..\\Src\\rho\\rho.s
Comment: row_int used once
rx_corr 00000168

Symbol: rx_corr
   Definitions
      At line 242 in file ..\\Src\\rho\\rho.s
   Uses
      At line 239 in file ..\\Src\\rho\\rho.s
Comment: rx_corr used once
sudo_mod 0000015E

Symbol: sudo_mod
   Definitions
      At line 238 in file ..\\Src\\rho\\rho.s
   Uses
      At line 241 in file ..\\Src\\rho\\rho.s
Comment: sudo_mod used once
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CAMERA_PORT 00000000

Symbol: CAMERA_PORT
   Definitions
      At line 40 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAMERA_PORT unused
CAPTURE_BUFFER 00000000

Symbol: CAPTURE_BUFFER
   Definitions
      At line 24 in file ..\\Src\\rho\\rho.s
   Uses
      At line 82 in file ..\\Src\\rho\\rho.s
      At line 230 in file ..\\Src\\rho\\rho.s

CAPTURE_BUFFER_END 00000000

Symbol: CAPTURE_BUFFER_END
   Definitions
      At line 34 in file ..\\Src\\rho\\rho.s
   Uses
      At line 128 in file ..\\Src\\rho\\rho.s
      At line 179 in file ..\\Src\\rho\\rho.s

CAPTURE_BUFFER_MAX 00000000

Symbol: CAPTURE_BUFFER_MAX
   Definitions
      At line 35 in file ..\\Src\\rho\\rho.s
   Uses
      At line 153 in file ..\\Src\\rho\\rho.s
Comment: CAPTURE_BUFFER_MAX used once
CENTROID_X 00000000

Symbol: CENTROID_X
   Definitions
      At line 31 in file ..\\Src\\rho\\rho.s
   Uses
      At line 242 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_X used once
CENTROID_Y 00000000

Symbol: CENTROID_Y
   Definitions
      At line 32 in file ..\\Src\\rho\\rho.s
   Uses
      At line 201 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_Y used once
DENSITY_X 00000000

Symbol: DENSITY_X
   Definitions
      At line 26 in file ..\\Src\\rho\\rho.s
   Uses
      At line 219 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X used once
DENSITY_X_MAX 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: DENSITY_X_MAX
   Definitions
      At line 33 in file ..\\Src\\rho\\rho.s
   Uses
      At line 222 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X_MAX used once
DENSITY_Y 00000000

Symbol: DENSITY_Y
   Definitions
      At line 27 in file ..\\Src\\rho\\rho.s
   Uses
      At line 249 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_Y used once
QUADRANT_BUFFER 00000000

Symbol: QUADRANT_BUFFER
   Definitions
      At line 28 in file ..\\Src\\rho\\rho.s
   Uses
      At line 105 in file ..\\Src\\rho\\rho.s
      At line 200 in file ..\\Src\\rho\\rho.s
      At line 257 in file ..\\Src\\rho\\rho.s

QUADRANT_PREVIOUS 00000000

Symbol: QUADRANT_PREVIOUS
   Definitions
      At line 30 in file ..\\Src\\rho\\rho.s
   Uses
      At line 215 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_PREVIOUS used once
QUADRANT_TOTAL 00000000

Symbol: QUADRANT_TOTAL
   Definitions
      At line 29 in file ..\\Src\\rho\\rho.s
   Uses
      At line 113 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_TOTAL used once
RHO_MEM_END 00000000

Symbol: RHO_MEM_END
   Definitions
      At line 39 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: RHO_MEM_END unused
THRESH_BUFFER 00000000

Symbol: THRESH_BUFFER
   Definitions
      At line 25 in file ..\\Src\\rho\\rho.s
   Uses
      At line 48 in file ..\\Src\\rho\\rho.s
      At line 49 in file ..\\Src\\rho\\rho.s
      At line 88 in file ..\\Src\\rho\\rho.s
      At line 89 in file ..\\Src\\rho\\rho.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 274 in file ..\\Src\\rho\\rho.s

THRESH_BUFFER_END 00000000

Symbol: THRESH_BUFFER_END
   Definitions
      At line 36 in file ..\\Src\\rho\\rho.s
   Uses
      At line 158 in file ..\\Src\\rho\\rho.s
      At line 265 in file ..\\Src\\rho\\rho.s
      At line 272 in file ..\\Src\\rho\\rho.s

THRESH_BUFFER_MAX 00000000

Symbol: THRESH_BUFFER_MAX
   Definitions
      At line 37 in file ..\\Src\\rho\\rho.s
   Uses
      At line 53 in file ..\\Src\\rho\\rho.s
Comment: THRESH_BUFFER_MAX used once
THRESH_VALUE 00000000

Symbol: THRESH_VALUE
   Definitions
      At line 38 in file ..\\Src\\rho\\rho.s
   Uses
      At line 90 in file ..\\Src\\rho\\rho.s
      At line 172 in file ..\\Src\\rho\\rho.s

printBuffers 00000000

Symbol: printBuffers
   Definitions
      At line 188 in file ..\\Src\\rho\\rho.s
   Uses
      At line 279 in file ..\\Src\\rho\\rho.s
Comment: printBuffers used once
proc_flag 00000000

Symbol: proc_flag
   Definitions
      At line 42 in file ..\\Src\\rho\\rho.s
   Uses
      At line 94 in file ..\\Src\\rho\\rho.s
      At line 116 in file ..\\Src\\rho\\rho.s

zero_memory 00000000

Symbol: zero_memory
   Definitions
      At line 76 in file ..\\Src\\rho\\rho.s
   Uses
      At line 79 in file ..\\Src\\rho\\rho.s
Comment: zero_memory used once
20 symbols
384 symbols in table
