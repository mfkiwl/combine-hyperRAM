


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "..\\Src\\rho\\rho.s"
    1 00000000         ; 
    2 00000000         ;
    3 00000000         #line   12               "..\\Src\\rho\\rho.s"
   12 00000000         
   13 00000000         ; 
   14 00000000         #line   23               "..\\Src\\rho\\rho.s"
   23 00000000         
   24 00000000         ;
   25 00000000         
   26 00000000                 area             rho, code, readonly
   27 00000000                 preserve8
   28 00000000         
   29 00000000                 extern           CAPTURE_BUFFER
   30 00000000                 extern           THRESH_BUFFER
   31 00000000                 extern           DENSITY_X
   32 00000000                 extern           DENSITY_Y
   33 00000000                 extern           QUADRANT_BUFFER
   34 00000000                 extern           QUADRANT_TOTAL
   35 00000000                 extern           QUADRANT_PREVIOUS
   36 00000000                 extern           CENTROID_X
   37 00000000                 extern           CENTROID_Y
   38 00000000                 extern           DENSITY_Y_MAX
   39 00000000                 extern           CAPTURE_BUFFER_END
   40 00000000                 extern           CAPTURE_BUFFER_MAX
   41 00000000                 extern           THRESH_BUFFER_END
   42 00000000                 extern           THRESH_BUFFER_MAX
   43 00000000                 extern           THRESH_VALUE
   44 00000000                 extern           RHO_MEM_END
   45 00000000                 extern           CAMERA_PORT
   46 00000000         
   47 00000000                 extern           proc_flag
   48 00000000                 entry
   49 00000000         
   50 00000000                 align
   51 00000000         asm_test
                               proc
   52 00000000                 export           asm_test
   53 00000000 4F64            ldr              r7, =THRESH_BUFFER
   54 00000002 F8DF 8190       ldr              r8, =THRESH_BUFFER
   55 00000006 F04F 02AA       mov              r2, #0x00aa
   56 0000000A F827 2B02 
                       add_row strh             r2, [r7], #2
   57 0000000E F04F 0101       mov              r1, #1
   58 00000012 4861            ldr              r0, =THRESH_BUFFER_MAX ; 
   59 00000014 6800            ldr              r0, [r0]
   60 00000016         
   61 00000016 F827 1B02 
                       fill_buff
                               strh             r1, [r7], #2
   62 0000001A F101 0101       add              r1, r1, #1
   63 0000001E F011 0F01       tst              r1, #1
   64 00000022 D101            bne              nonl
   65 00000024 F827 2B02       strh             r2, [r7], #2
   66 00000028 4287    nonl    cmp              r7, r0
   67 0000002A DBF4            blt              fill_buff
   68 0000002C E7FE            b                rho_process
   69 0000002E 4770            bx               lr
   70 00000030                 endp



ARM Macro Assembler    Page 2 


   71 00000030         
   72 00000030                 align
   73 00000030         rho_init
                               proc
   74 00000030                 export           rho_init
   75 00000030 4770            bx               lr
   76 00000032                 endp
   77 00000032         
   78 00000032 00 00           align
   79 00000034         frame_start
                               proc
   80 00000034                 import           zero_memory
   81 00000034                 export           frame_start
   82 00000034 B500            stmdb            sp!, {lr}
   83 00000036 F7FF FFFE       bl               zero_memory
   84 0000003A F85D EB04       ldmia            sp!, {lr}
   85 0000003E F04F 0600       mov              r6, #0      ; 
   86 00000042 F8DF 9158       ldr              r9, =CAPTURE_BUFFER
   87 00000046         ;add r9, r9, #1
   88 00000046 4F53            ldr              r7, =THRESH_BUFFER ; 
   89 00000048 F8DF 8148       ldr              r8, =THRESH_BUFFER ; 
   90 0000004C 4854            ldr              r0, =THRESH_VALUE ; 
   91 0000004E 6805            ldr              r5, [r0]
   92 00000050         
   93 00000050         ; Set process flag
   94 00000050 4854            ldr              r0, =proc_flag
   95 00000052 F04F 0101       mov              r1, #1
   96 00000056 6001            str              r1, [r0]
   97 00000058         
   98 00000058 4770            bx               lr
   99 0000005A                 endp
  100 0000005A         
  101 0000005A 00 00           align
  102 0000005C         frame_end
                               proc
  103 0000005C                 export           frame_end
  104 0000005C         ; Add the four quadrants into QUADRANT_TOTAL
  105 0000005C 4852            ldr              r0, =QUADRANT_BUFFER ; 
  106 0000005E F850 2B04       ldr              r2, [r0], #4 ; 
  107 00000062 F850 1B04       ldr              r1, [r0], #4
  108 00000066 440A            add              r2, r2, r1
  109 00000068 F850 1B04       ldr              r1, [r0], #4
  110 0000006C 440A            add              r2, r2, r1
  111 0000006E 6801            ldr              r1, [r0]
  112 00000070 440A            add              r2, r2, r1
  113 00000072 484E            ldr              r0, =QUADRANT_TOTAL
  114 00000074 6002            str              r2, [r0]
  115 00000076         ; Reset process flag
  116 00000076 484B            ldr              r0, =proc_flag
  117 00000078 F04F 0100       mov              r1, #0
  118 0000007C 6001            str              r1, [r0]
  119 0000007E 4770            bx               lr
  120 00000080                 endp
  121 00000080         
  122 00000080                 align
  123 00000080         row_int proc
  124 00000080                 export           row_int
  125 00000080         
  126 00000080         ; Increment End of capture buffer



ARM Macro Assembler    Page 3 


  127 00000080 494B            ldr              r1, =CAPTURE_BUFFER_END
  128 00000082 6808            ldr              r0, [r1]
  129 00000084 F100 0006       add              r0, r0, #6  ;
  130 00000088 6008            str              r0, [r1]
  131 0000008A         ; Store Y delimiter in thresh buffer
  132 0000008A F64A 20AA       mov              r0, #0xaaaa ; 
  133 0000008E F827 0B02       strh             r0, [r7], #2 ; 
  134 00000092         #line   141              "..\\Src\\rho\\rho.s"
  141 00000092 4848    check_rmax
                               ldr              r0, =CAPTURE_BUFFER_MAX
  142 00000094 6800            ldr              r0, [r0]
  143 00000096 4581            cmp              r9, r0      ; 
  144 00000098 DD02            ble              not_done
  145 0000009A         
  146 0000009A 4847            ldr              r0, =THRESH_BUFFER_END ; Set fi
                                                            nal end of thresh b
                                                            uffer for frame
  147 0000009C 6007            str              r7, [r0]
  148 0000009E E7FE            b                rho_process
  149 000000A0         
  150 000000A0 BF00    not_done
                               nop
  151 000000A2         
  152 000000A2         
  153 000000A2         
  154 000000A2 4770            bx               lr
  155 000000A4                 endp
  156 000000A4         
  157 000000A4                 align
  158 000000A4         pclk_int
                               proc
  159 000000A4                 export           pclk_int
  160 000000A4 493E            ldr              r1, =THRESH_VALUE ; 
  161 000000A6 680D            ldr              r5, [r1]
  162 000000A8         
  163 000000A8 F819 3B01 
                       pclk_start
                               ldrb             r3, [r9], #1 ; 
  164 000000AC 42AB            cmp              r3, r5      ; 
  165 000000AE BFA8 F827 
              9B02             strgeh           r9, [r7], #2 ; 
  166 000000B4         
  167 000000B4 493E            ldr              r1, =CAPTURE_BUFFER_END
  168 000000B6 6808            ldr              r0, [r1]
  169 000000B8 4581            cmp              r9, r0
  170 000000BA DBF5            blt              pclk_start
  171 000000BC 4770            bx               lr
  172 000000BE                 endp
  173 000000BE         
  174 000000BE 00 00           align
  175 000000C0         rho_process
                               proc
  176 000000C0                 import           printBuffers
  177 000000C0                 export           rho_process
  178 000000C0 F04F 0A00       mov              r10, #0     ; 
  179 000000C4 F04F 0B00       mov              r11, #0
  180 000000C8         
  181 000000C8 F838 AB02 
                       read_loop



ARM Macro Assembler    Page 4 


                               ldrh             r10, [r8], #2 ; 
  182 000000CC F64A 20AA       mov              r0, #0xaaaa
  183 000000D0 4582            cmp              r10, r0     ; 
  184 000000D2 D126            bne              no_del
  185 000000D4         
  186 000000D4         ; Process Row
  187 000000D4 4834            ldr              r0, =QUADRANT_BUFFER
  188 000000D6 4939            ldr              r1, =CENTROID_Y
  189 000000D8 8809            ldrh             r1, [r1]
  190 000000DA 458B            cmp              r11, r1     ; 
  191 000000DC DA07            bge              higher
  192 000000DE F00C 0CFD       and              r12, r12, #0xfd ; 
  193 000000E2 F850 1B04       ldr              r1, [r0], #4 ; 
  194 000000E6 6802            ldr              r2, [r0]
  195 000000E8 EB01 0002       add              r0, r1, r2
  196 000000EC E008            b                dx_store
  197 000000EE F04C 0C02 
                       higher  orr              r12, r12, #0x02 ; 
  198 000000F2 F100 0008       add              r0, r0, #8  ; 
  199 000000F6 F850 1B04       ldr              r1, [r0], #4
  200 000000FA 6802            ldr              r2, [r0]
  201 000000FC EB01 0002       add              r0, r1, r2  ; Calculate QN into
                                                             r0
  202 00000100 492F    dx_store
                               ldr              r1, =QUADRANT_PREVIOUS
  203 00000102 680A            ldr              r2, [r1]    ; 
  204 00000104 6008            str              r0, [r1]    ; 
  205 00000106 EBA0 0002       sub              r0, r0, r2  ; Calculate QN - QP
                                                             into r0
  206 0000010A 4A2E            ldr              r2, =DENSITY_X
  207 0000010C F842 000B       str              r0, [r2, r11]
  208 00000110 F10B 0B04       add              r11, r11, #4
  209 00000114 4B2C            ldr              r3, =DENSITY_Y_MAX ; 
  210 00000116 681A            ldr              r2, [r3]
  211 00000118 6809            ldr              r1, [r1]
  212 0000011A 4291            cmp              r1, r2
  213 0000011C DD2C            ble              rho_lcheck  ; Contiunue (to qua
                                                            drant increment) if
                                                             less than or equal
                                                            
  214 0000011E 6019            str              r1, [r3]    ; Store as new max 
                                                            if greater
  215 00000120 E02A            b                rho_lcheck
  216 00000122         
  217 00000122         ; Process Pixel
  218 00000122 481E    no_del  ldr              r0, =CAPTURE_BUFFER ; Load capt
                                                            ure buffer to corre
                                                            ct offset
  219 00000124 F64F 71FF       mov              r1, #0x0000ffff
  220 00000128 EA00 0001       and              r0, r0, r1  ; Keep bottom half 
                                                            in r0
  221 0000012C 4582            cmp              r10, r0
  222 0000012E DB23            blt              rho_lcheck  ; Check for valid v
                                                            alue
  223 00000130 EBAA 0A00       sub              r10, r10, r0 ; Remove address o
                                                            ffset from r10
  224 00000134 F1AA 0A01       sub              r10, r10, #1
  225 00000138 F04F 0006       mov              r0, #6      ;
  226 0000013C 4582    sudo_mod



ARM Macro Assembler    Page 5 


                               cmp              r10, r0
  227 0000013E DB02            blt              rx_corr
  228 00000140 EBAA 0A00       sub              r10, r10, r0
  229 00000144 E7FA            b                sudo_mod
  230 00000146 4921    rx_corr ldr              r1, =CENTROID_X
  231 00000148 8809            ldrh             r1, [r1]
  232 0000014A 458A            cmp              r10, r1     ; 
  233 0000014C DA02            bge              right
  234 0000014E F00C 0CFE 
                       left    and              r12, r12, #0xfe ; 
  235 00000152 E001            b                dy_store
  236 00000154 F04C 0C01 
                       right   orr              r12, r12, #0x01 ; 
  237 00000158 491D    dy_store
                               ldr              r1, =DENSITY_Y
  238 0000015A EB0A 020A       add              r2, r10, r10 ; Calcalute r10 x4
                                                             into r2
  239 0000015E 4412            add              r2, r2, r2  ; (r10 is byte widt
                                                            h while Dx is word 
                                                            width)
  240 00000160 5888            ldr              r0, [r1, r2] ; 
  241 00000162 F100 0001       add              r0, r0, #1
  242 00000166 5088            str              r0, [r1, r2]
  243 00000168         
  244 00000168         ; Increment Quandrants
  245 00000168 490F    inc_qs  ldr              r1, =QUADRANT_BUFFER
  246 0000016A EB0C 020C       add              r2, r12, r12 ; Multiply r12 by 
                                                            word length
  247 0000016E 4412            add              r2, r2, r2
  248 00000170 5888            ldr              r0, [r1, r2] ; 
  249 00000172 F100 0001       add              r0, r0, #1
  250 00000176 5088            str              r0, [r1, r2]
  251 00000178         
  252 00000178         ; Loop until Thresh Buffer End
  253 00000178 480F    rho_lcheck
                               ldr              r0, =THRESH_BUFFER_END ; 
  254 0000017A 6800            ldr              r0, [r0]
  255 0000017C 4580            cmp              r8, r0
  256 0000017E DBA3            blt              read_loop
  257 00000180         
  258 00000180 B500            stmdb            sp!, {lr}
  259 00000182 F7FF FFFE       bl               frame_end
  260 00000186 F04F 000A       mov              r0, #10
  261 0000018A F7FF FFFE       bl               printBuffers
  262 0000018E F85D EB04       ldmia            sp!, {lr}
  263 00000192 4770            bx               lr
  264 00000194                 endp
  265 00000194                 end
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 6 


              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp
 --apcs=interwork --depend=rho_mod_v1\rho.d -orho_mod_v1\rho.o -I.\RTE\_rho_mod
_v1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\K
eil\STM32L4xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include --predefine="
__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION S
ETA 524" --predefine="_RTE_ SETA 1" --predefine="STM32L432xx SETA 1" --list=rho
.lst ..\Src\rho\rho.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

add_row 0000000A

Symbol: add_row
   Definitions
      At line 56 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: add_row unused
asm_test 00000000

Symbol: asm_test
   Definitions
      At line 51 in file ..\\Src\\rho\\rho.s
   Uses
      At line 52 in file ..\\Src\\rho\\rho.s
Comment: asm_test used once
check_rmax 00000092

Symbol: check_rmax
   Definitions
      At line 141 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: check_rmax unused
dx_store 00000100

Symbol: dx_store
   Definitions
      At line 202 in file ..\\Src\\rho\\rho.s
   Uses
      At line 196 in file ..\\Src\\rho\\rho.s
Comment: dx_store used once
dy_store 00000158

Symbol: dy_store
   Definitions
      At line 237 in file ..\\Src\\rho\\rho.s
   Uses
      At line 235 in file ..\\Src\\rho\\rho.s
Comment: dy_store used once
fill_buff 00000016

Symbol: fill_buff
   Definitions
      At line 61 in file ..\\Src\\rho\\rho.s
   Uses
      At line 67 in file ..\\Src\\rho\\rho.s
Comment: fill_buff used once
frame_end 0000005C

Symbol: frame_end
   Definitions
      At line 102 in file ..\\Src\\rho\\rho.s
   Uses
      At line 103 in file ..\\Src\\rho\\rho.s
      At line 259 in file ..\\Src\\rho\\rho.s

frame_start 00000034




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: frame_start
   Definitions
      At line 79 in file ..\\Src\\rho\\rho.s
   Uses
      At line 81 in file ..\\Src\\rho\\rho.s
Comment: frame_start used once
higher 000000EE

Symbol: higher
   Definitions
      At line 197 in file ..\\Src\\rho\\rho.s
   Uses
      At line 191 in file ..\\Src\\rho\\rho.s
Comment: higher used once
inc_qs 00000168

Symbol: inc_qs
   Definitions
      At line 245 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: inc_qs unused
left 0000014E

Symbol: left
   Definitions
      At line 234 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: left unused
no_del 00000122

Symbol: no_del
   Definitions
      At line 218 in file ..\\Src\\rho\\rho.s
   Uses
      At line 184 in file ..\\Src\\rho\\rho.s
Comment: no_del used once
nonl 00000028

Symbol: nonl
   Definitions
      At line 66 in file ..\\Src\\rho\\rho.s
   Uses
      At line 64 in file ..\\Src\\rho\\rho.s
Comment: nonl used once
not_done 000000A0

Symbol: not_done
   Definitions
      At line 150 in file ..\\Src\\rho\\rho.s
   Uses
      At line 144 in file ..\\Src\\rho\\rho.s
Comment: not_done used once
pclk_int 000000A4

Symbol: pclk_int
   Definitions
      At line 158 in file ..\\Src\\rho\\rho.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 159 in file ..\\Src\\rho\\rho.s
Comment: pclk_int used once
pclk_start 000000A8

Symbol: pclk_start
   Definitions
      At line 163 in file ..\\Src\\rho\\rho.s
   Uses
      At line 170 in file ..\\Src\\rho\\rho.s
Comment: pclk_start used once
read_loop 000000C8

Symbol: read_loop
   Definitions
      At line 181 in file ..\\Src\\rho\\rho.s
   Uses
      At line 256 in file ..\\Src\\rho\\rho.s
Comment: read_loop used once
rho 00000000

Symbol: rho
   Definitions
      At line 26 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: rho unused
rho_init 00000030

Symbol: rho_init
   Definitions
      At line 73 in file ..\\Src\\rho\\rho.s
   Uses
      At line 74 in file ..\\Src\\rho\\rho.s
Comment: rho_init used once
rho_lcheck 00000178

Symbol: rho_lcheck
   Definitions
      At line 253 in file ..\\Src\\rho\\rho.s
   Uses
      At line 213 in file ..\\Src\\rho\\rho.s
      At line 215 in file ..\\Src\\rho\\rho.s
      At line 222 in file ..\\Src\\rho\\rho.s

rho_process 000000C0

Symbol: rho_process
   Definitions
      At line 175 in file ..\\Src\\rho\\rho.s
   Uses
      At line 68 in file ..\\Src\\rho\\rho.s
      At line 148 in file ..\\Src\\rho\\rho.s
      At line 177 in file ..\\Src\\rho\\rho.s

right 00000154

Symbol: right
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 236 in file ..\\Src\\rho\\rho.s
   Uses
      At line 233 in file ..\\Src\\rho\\rho.s
Comment: right used once
row_int 00000080

Symbol: row_int
   Definitions
      At line 123 in file ..\\Src\\rho\\rho.s
   Uses
      At line 124 in file ..\\Src\\rho\\rho.s
Comment: row_int used once
rx_corr 00000146

Symbol: rx_corr
   Definitions
      At line 230 in file ..\\Src\\rho\\rho.s
   Uses
      At line 227 in file ..\\Src\\rho\\rho.s
Comment: rx_corr used once
sudo_mod 0000013C

Symbol: sudo_mod
   Definitions
      At line 226 in file ..\\Src\\rho\\rho.s
   Uses
      At line 229 in file ..\\Src\\rho\\rho.s
Comment: sudo_mod used once
25 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CAMERA_PORT 00000000

Symbol: CAMERA_PORT
   Definitions
      At line 45 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAMERA_PORT unused
CAPTURE_BUFFER 00000000

Symbol: CAPTURE_BUFFER
   Definitions
      At line 29 in file ..\\Src\\rho\\rho.s
   Uses
      At line 86 in file ..\\Src\\rho\\rho.s
      At line 218 in file ..\\Src\\rho\\rho.s

CAPTURE_BUFFER_END 00000000

Symbol: CAPTURE_BUFFER_END
   Definitions
      At line 39 in file ..\\Src\\rho\\rho.s
   Uses
      At line 127 in file ..\\Src\\rho\\rho.s
      At line 167 in file ..\\Src\\rho\\rho.s

CAPTURE_BUFFER_MAX 00000000

Symbol: CAPTURE_BUFFER_MAX
   Definitions
      At line 40 in file ..\\Src\\rho\\rho.s
   Uses
      At line 141 in file ..\\Src\\rho\\rho.s
Comment: CAPTURE_BUFFER_MAX used once
CENTROID_X 00000000

Symbol: CENTROID_X
   Definitions
      At line 36 in file ..\\Src\\rho\\rho.s
   Uses
      At line 230 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_X used once
CENTROID_Y 00000000

Symbol: CENTROID_Y
   Definitions
      At line 37 in file ..\\Src\\rho\\rho.s
   Uses
      At line 188 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_Y used once
DENSITY_X 00000000

Symbol: DENSITY_X
   Definitions
      At line 31 in file ..\\Src\\rho\\rho.s
   Uses
      At line 206 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X used once
DENSITY_Y 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: DENSITY_Y
   Definitions
      At line 32 in file ..\\Src\\rho\\rho.s
   Uses
      At line 237 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_Y used once
DENSITY_Y_MAX 00000000

Symbol: DENSITY_Y_MAX
   Definitions
      At line 38 in file ..\\Src\\rho\\rho.s
   Uses
      At line 209 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_Y_MAX used once
QUADRANT_BUFFER 00000000

Symbol: QUADRANT_BUFFER
   Definitions
      At line 33 in file ..\\Src\\rho\\rho.s
   Uses
      At line 105 in file ..\\Src\\rho\\rho.s
      At line 187 in file ..\\Src\\rho\\rho.s
      At line 245 in file ..\\Src\\rho\\rho.s

QUADRANT_PREVIOUS 00000000

Symbol: QUADRANT_PREVIOUS
   Definitions
      At line 35 in file ..\\Src\\rho\\rho.s
   Uses
      At line 202 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_PREVIOUS used once
QUADRANT_TOTAL 00000000

Symbol: QUADRANT_TOTAL
   Definitions
      At line 34 in file ..\\Src\\rho\\rho.s
   Uses
      At line 113 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_TOTAL used once
RHO_MEM_END 00000000

Symbol: RHO_MEM_END
   Definitions
      At line 44 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: RHO_MEM_END unused
THRESH_BUFFER 00000000

Symbol: THRESH_BUFFER
   Definitions
      At line 30 in file ..\\Src\\rho\\rho.s
   Uses
      At line 53 in file ..\\Src\\rho\\rho.s
      At line 54 in file ..\\Src\\rho\\rho.s
      At line 88 in file ..\\Src\\rho\\rho.s
      At line 89 in file ..\\Src\\rho\\rho.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols


THRESH_BUFFER_END 00000000

Symbol: THRESH_BUFFER_END
   Definitions
      At line 41 in file ..\\Src\\rho\\rho.s
   Uses
      At line 146 in file ..\\Src\\rho\\rho.s
      At line 253 in file ..\\Src\\rho\\rho.s

THRESH_BUFFER_MAX 00000000

Symbol: THRESH_BUFFER_MAX
   Definitions
      At line 42 in file ..\\Src\\rho\\rho.s
   Uses
      At line 58 in file ..\\Src\\rho\\rho.s
Comment: THRESH_BUFFER_MAX used once
THRESH_VALUE 00000000

Symbol: THRESH_VALUE
   Definitions
      At line 43 in file ..\\Src\\rho\\rho.s
   Uses
      At line 90 in file ..\\Src\\rho\\rho.s
      At line 160 in file ..\\Src\\rho\\rho.s

printBuffers 00000000

Symbol: printBuffers
   Definitions
      At line 176 in file ..\\Src\\rho\\rho.s
   Uses
      At line 261 in file ..\\Src\\rho\\rho.s
Comment: printBuffers used once
proc_flag 00000000

Symbol: proc_flag
   Definitions
      At line 47 in file ..\\Src\\rho\\rho.s
   Uses
      At line 94 in file ..\\Src\\rho\\rho.s
      At line 116 in file ..\\Src\\rho\\rho.s

zero_memory 00000000

Symbol: zero_memory
   Definitions
      At line 80 in file ..\\Src\\rho\\rho.s
   Uses
      At line 83 in file ..\\Src\\rho\\rho.s
Comment: zero_memory used once
20 symbols
383 symbols in table
