


ARM Macro Assembler    Page 1 


    1 00000000         #line   1                "..\\Src\\rho\\rho.s"
    1 00000000         ; 
    2 00000000         ;
    3 00000000         ;
    4 00000000         #line   11               "..\\Src\\rho\\rho.s"
   11 00000000         
   12 00000000         ; 
   13 00000000         
   14 00000000         
   15 00000000         
   16 00000000         
   17 00000000         ;#define STATIC_BUFFER
   18 00000000         
   19 00000000         
   20 00000000                 area             rho, code, readonly
   21 00000000                 preserve8
   22 00000000         
   23 00000000                 extern           CAPTURE_BUFFER
   24 00000000                 extern           THRESH_BUFFER
   25 00000000                 extern           DENSITY_X
   26 00000000                 extern           DENSITY_Y
   27 00000000                 extern           QUADRANT_BUFFER
   28 00000000                 extern           QUADRANT_TOTAL
   29 00000000                 extern           QUADRANT_PREVIOUS
   30 00000000                 extern           CENTROID_X
   31 00000000                 extern           CENTROID_Y
   32 00000000                 extern           DENSITY_X_MAX
   33 00000000                 extern           CAPTURE_BUFFER_END
   34 00000000                 extern           CAPTURE_BUFFER_MAX
   35 00000000                 extern           THRESH_BUFFER_END
   36 00000000                 extern           THRESH_BUFFER_MAX
   37 00000000                 extern           THRESH_VALUE
   38 00000000                 extern           RHO_MEM_END
   39 00000000                 extern           CAMERA_PORT
   40 00000000         
   41 00000000                 extern           proc_flag
   42 00000000                 entry
   43 00000000         
   44 00000000                 align
   45 00000000         asm_test
                               proc
   46 00000000                 export           asm_test
   47 00000000 F04F 0000       mov              r0, #0
   48 00000004 F04F 0101       mov              r1, #1
   49 00000008 F04F 0202       mov              r2, #2
   50 0000000C F04F 0303       mov              r3, #3
   51 00000010 F04F 0404       mov              r4, #4
   52 00000014 F04F 0505       mov              r5, #5
   53 00000018 F04F 0606       mov              r6, #6
   54 0000001C F04F 0707       mov              r7, #7
   55 00000020 F04F 0808       mov              r8, #8
   56 00000024 F04F 0909       mov              r9, #9
   57 00000028 F04F 0A0A       mov              r10, #10
   58 0000002C F04F 0B0B       mov              r11, #11
   59 00000030 F04F 0C0C       mov              r12, #12
   60 00000034 4770            bx               lr
   61 00000036                 endp
   62 00000036         
   63 00000036 00 00           align



ARM Macro Assembler    Page 2 


   64 00000038         rho_init
                               proc
   65 00000038                 export           rho_init
   66 00000038         
   67 00000038 4770            bx               lr
   68 0000003A                 endp
   69 0000003A         
   70 0000003A 00 00           align
   71 0000003C         frame_start
                               proc
   72 0000003C                 import           zero_memory
   73 0000003C                 export           frame_start
   74 0000003C B500            stmdb            sp!, {lr}
   75 0000003E F7FF FFFE       bl               zero_memory
   76 00000042 F85D EB04       ldmia            sp!, {lr}
   77 00000046 F04F 0601       mov              r6, #1      ; 
   78 0000004A 4F59            ldr              r7, =CAPTURE_BUFFER
   79 0000004C         
   80 0000004C         
   81 0000004C         
   82 0000004C         
   83 0000004C         
   84 0000004C F8DF 8164       ldr              r8, =THRESH_BUFFER ; 
   85 00000050 F8DF 9160       ldr              r9, =THRESH_BUFFER ; 
   86 00000054         ;ldr r0, =THRESH_VALUE       ; 
   87 00000054         ;ldr th, [r0]
   88 00000054         
   89 00000054         ; Set process flag
   90 00000054 4858            ldr              r0, =proc_flag
   91 00000056 F04F 0101       mov              r1, #1
   92 0000005A 6001            str              r1, [r0]
   93 0000005C         
   94 0000005C 4770            bx               lr
   95 0000005E                 endp
   96 0000005E         
   97 0000005E 00 00           align
   98 00000060         frame_end
                               proc
   99 00000060                 export           frame_end
  100 00000060         ; Add the four quadrants into QUADRANT_TOTAL
  101 00000060 4856            ldr              r0, =QUADRANT_BUFFER ; 
  102 00000062 F850 2B04       ldr              r2, [r0], #4 ; 
  103 00000066 F850 1B04       ldr              r1, [r0], #4
  104 0000006A 440A            add              r2, r2, r1
  105 0000006C F850 1B04       ldr              r1, [r0], #4
  106 00000070 440A            add              r2, r2, r1
  107 00000072 6801            ldr              r1, [r0]
  108 00000074 440A            add              r2, r2, r1
  109 00000076 4852            ldr              r0, =QUADRANT_TOTAL
  110 00000078 6002            str              r2, [r0]
  111 0000007A         ; Reset process flag
  112 0000007A 484F            ldr              r0, =proc_flag
  113 0000007C F04F 0100       mov              r1, #0
  114 00000080 6001            str              r1, [r0]
  115 00000082 4770            bx               lr
  116 00000084                 endp
  117 00000084         
  118 00000084                 align
  119 00000084         row_int proc



ARM Macro Assembler    Page 3 


  120 00000084                 export           row_int
  121 00000084         
  122 00000084         #line   131              "..\\Src\\rho\\rho.s"
  131 00000084         ; Otherwise, buffer is refilling so reset read index to 
                       start
  132 00000084 484A            ldr              r0, =CAPTURE_BUFFER
  133 00000086 4638            mov              r0, r7
  134 00000088         
  135 00000088         ; Store Y delimiter in thresh buffer
  136 00000088 F64A 20AA       mov              r0, #0xaaaa ; 
  137 0000008C F828 0B02       strh             r0, [r8], #2 ; 
  138 00000090         
  139 00000090 F016 0F01       tst              r6, #1      ; 
  140 00000094 D102            bne              rg_row
  141 00000096 F107 0701       add              r7, r7, #1  ; 
  142 0000009A E000            b                check_rmax
  143 0000009C         
  144 0000009C         
  145 0000009C         
  146 0000009C BF00    rg_row  nop
  147 0000009E         
  148 0000009E         
  149 0000009E BF00    check_rmax
                               nop
  150 000000A0         #line   165              "..\\Src\\rho\\rho.s"
  165 000000A0 4770            bx               lr
  166 000000A2                 endp
  167 000000A2         
  168 000000A2 00 00           align
  169 000000A4         pixel_proc
                               proc
  170 000000A4                 export           pixel_proc
  171 000000A4 4947            ldr              r1, =THRESH_VALUE ; 
  172 000000A6 680A            ldr              r2, [r1]
  173 000000A8         
  174 000000A8 F817 3B02 
                       pclk_start
                               ldrb             r3, [r7], #2 ; 
  175 000000AC 4293            cmp              r3, r2      ; 
  176 000000AE BFA8 F828 
              7B02             strgeh           r7, [r8], #2 ; 
  177 000000B4         
  178 000000B4 4944            ldr              r1, =CAPTURE_BUFFER_END
  179 000000B6 6808            ldr              r0, [r1]
  180 000000B8 4287            cmp              r7, r0
  181 000000BA DBF5            blt              pclk_start
  182 000000BC 4770            bx               lr
  183 000000BE                 endp
  184 000000BE         
  185 000000BE 00 00           align
  186 000000C0         rho_proc
                               proc
  187 000000C0                 import           printBuffers
  188 000000C0                 export           rho_proc
  189 000000C0 4842            ldr              r0, =THRESH_BUFFER_END ; Set fi
                                                            nal end of thresh b
                                                            uffer for frame
  190 000000C2 F8C0 8000       str              r8, [r0]
  191 000000C6         



ARM Macro Assembler    Page 4 


  192 000000C6 F04F 0A00       mov              r10, #0     ; 
  193 000000CA F04F 0B00       mov              r11, #0
  194 000000CE F04F 0C00       mov              r12, #0
  195 000000D2         
  196 000000D2 F839 AB02 
                       read_loop
                               ldrh             r10, [r9], #2 ; 
  197 000000D6 F64A 20AA       mov              r0, #0xaaaa
  198 000000DA 4582            cmp              r10, r0     ; 
  199 000000DC D125            bne              no_del
  200 000000DE         
  201 000000DE         ; Process Row
  202 000000DE 4837            ldr              r0, =QUADRANT_BUFFER
  203 000000E0 493B            ldr              r1, =CENTROID_Y
  204 000000E2 8809            ldrh             r1, [r1]
  205 000000E4 458B            cmp              r11, r1     ; 
  206 000000E6 DA07            bge              higher
  207 000000E8 F00C 0CFD       and              r12, r12, #0xfd ; 
  208 000000EC F850 1B04       ldr              r1, [r0], #4 ; 
  209 000000F0 6802            ldr              r2, [r0]
  210 000000F2 EB01 0002       add              r0, r1, r2
  211 000000F6 E008            b                dx_store
  212 000000F8 F04C 0C02 
                       higher  orr              r12, r12, #0x02 ; 
  213 000000FC F100 0008       add              r0, r0, #8  ; 
  214 00000100 F850 1B04       ldr              r1, [r0], #4
  215 00000104 6802            ldr              r2, [r0]
  216 00000106 EB01 0002       add              r0, r1, r2  ; Calculate QN into
                                                             r0
  217 0000010A 4932    dx_store
                               ldr              r1, =QUADRANT_PREVIOUS
  218 0000010C 680A            ldr              r2, [r1]    ; 
  219 0000010E 6008            str              r0, [r1]    ; 
  220 00000110 EBA0 0002       sub              r0, r0, r2  ; Calculate QN - QP
                                                             into r0
  221 00000114 4A30            ldr              r2, =DENSITY_X
  222 00000116 F842 000B       str              r0, [r2, r11]
  223 0000011A F10B 0B04       add              r11, r11, #4
  224 0000011E 4B2F            ldr              r3, =DENSITY_X_MAX ; 
  225 00000120 681A            ldr              r2, [r3]
  226 00000122 4290            cmp              r0, r2
  227 00000124 DD2C            ble              rho_lcheck  ; Contiunue (to qua
                                                            drant increment) if
                                                             less than or equal
                                                            
  228 00000126 6018            str              r0, [r3]    ; Store as new max 
                                                            if greater
  229 00000128 E02A            b                rho_lcheck
  230 0000012A         
  231 0000012A         ; Process Pixel
  232 0000012A 4821    no_del  ldr              r0, =CAPTURE_BUFFER ; Load capt
                                                            ure buffer to corre
                                                            ct offset
  233 0000012C F64F 71FF       mov              r1, #0x0000ffff
  234 00000130 EA00 0001       and              r0, r0, r1  ; Keep bottom half 
                                                            in r0
  235 00000134 4582            cmp              r10, r0
  236 00000136 DB23            blt              rho_lcheck  ; Check for valid v
                                                            alue



ARM Macro Assembler    Page 5 


  237 00000138 EBAA 0A00       sub              r10, r10, r0 ; Remove address o
                                                            ffset from r10
  238 0000013C F1AA 0A01       sub              r10, r10, #1
  239 00000140 F04F 00A0       mov              r0, #160
  240 00000144 4582    sudo_mod
                               cmp              r10, r0
  241 00000146 DB02            blt              rx_corr
  242 00000148 EBAA 0A00       sub              r10, r10, r0
  243 0000014C E7FA            b                sudo_mod
  244 0000014E 4924    rx_corr ldr              r1, =CENTROID_X
  245 00000150 8809            ldrh             r1, [r1]
  246 00000152 458A            cmp              r10, r1     ; 
  247 00000154 DA02            bge              right
  248 00000156 F00C 0CFE 
                       left    and              r12, r12, #0xfe ; 
  249 0000015A E001            b                dy_store
  250 0000015C F04C 0C01 
                       right   orr              r12, r12, #0x01 ; 
  251 00000160 4920    dy_store
                               ldr              r1, =DENSITY_Y
  252 00000162 EB0A 020A       add              r2, r10, r10 ; Calcalute r10 x4
                                                             into r2
  253 00000166 4412            add              r2, r2, r2  ; (r10 is byte widt
                                                            h while Dx is word 
                                                            width)
  254 00000168 5888            ldr              r0, [r1, r2] ; 
  255 0000016A F100 0001       add              r0, r0, #1
  256 0000016E 5088            str              r0, [r1, r2]
  257 00000170         
  258 00000170         ; Increment Quandrants
  259 00000170 4912    inc_qs  ldr              r1, =QUADRANT_BUFFER
  260 00000172 EB0C 020C       add              r2, r12, r12 ; Multiply r12 by 
                                                            word length
  261 00000176 4412            add              r2, r2, r2
  262 00000178 5888            ldr              r0, [r1, r2] ; 
  263 0000017A F100 0001       add              r0, r0, #1
  264 0000017E 5088            str              r0, [r1, r2]
  265 00000180         
  266 00000180         ; Loop until Thresh Buffer End
  267 00000180 4812    rho_lcheck
                               ldr              r0, =THRESH_BUFFER_END ; 
  268 00000182 6800            ldr              r0, [r0]
  269 00000184 4581            cmp              r9, r0
  270 00000186 DBA4            blt              read_loop
  271 00000188         
  272 00000188 B500            stmdb            sp!, {lr}
  273 0000018A F7FF FFFE       bl               frame_end
  274 0000018E 480F            ldr              r0, =THRESH_BUFFER_END
  275 00000190 6800            ldr              r0, [r0]
  276 00000192 4908            ldr              r1, =THRESH_BUFFER
  277 00000194 EBA0 0001       sub              r0, r0, r1
  278 00000198 EA4F 0050       lsr              r0, #1
  279 0000019C F1A0 0001       sub              r0, r0, #1
  280 000001A0 F04F 010A       mov              r1, #10
  281 000001A4 F7FF FFFE       bl               printBuffers
  282 000001A8 F85D EB04       ldmia            sp!, {lr}
  283 000001AC 4770            bx               lr
  284 000001AE                 endp
  285 000001AE                 end



ARM Macro Assembler    Page 6 


              00 00 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpreproc --diag_suppress=9931 --cpu=Cortex-M4.fp
 --apcs=interwork --depend=rho_mod_v1\rho.d -orho_mod_v1\rho.o -I.\RTE\_rho_mod
_v1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\K
eil\STM32L4xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32L4xx\Include --predefine="
__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION S
ETA 524" --predefine="_RTE_ SETA 1" --predefine="STM32L432xx SETA 1" --list=rho
.lst ..\Src\rho\rho.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_test 00000000

Symbol: asm_test
   Definitions
      At line 45 in file ..\\Src\\rho\\rho.s
   Uses
      At line 46 in file ..\\Src\\rho\\rho.s
Comment: asm_test used once
check_rmax 0000009E

Symbol: check_rmax
   Definitions
      At line 149 in file ..\\Src\\rho\\rho.s
   Uses
      At line 142 in file ..\\Src\\rho\\rho.s
Comment: check_rmax used once
dx_store 0000010A

Symbol: dx_store
   Definitions
      At line 217 in file ..\\Src\\rho\\rho.s
   Uses
      At line 211 in file ..\\Src\\rho\\rho.s
Comment: dx_store used once
dy_store 00000160

Symbol: dy_store
   Definitions
      At line 251 in file ..\\Src\\rho\\rho.s
   Uses
      At line 249 in file ..\\Src\\rho\\rho.s
Comment: dy_store used once
frame_end 00000060

Symbol: frame_end
   Definitions
      At line 98 in file ..\\Src\\rho\\rho.s
   Uses
      At line 99 in file ..\\Src\\rho\\rho.s
      At line 273 in file ..\\Src\\rho\\rho.s

frame_start 0000003C

Symbol: frame_start
   Definitions
      At line 71 in file ..\\Src\\rho\\rho.s
   Uses
      At line 73 in file ..\\Src\\rho\\rho.s
Comment: frame_start used once
higher 000000F8

Symbol: higher
   Definitions
      At line 212 in file ..\\Src\\rho\\rho.s
   Uses
      At line 206 in file ..\\Src\\rho\\rho.s
Comment: higher used once
inc_qs 00000170




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: inc_qs
   Definitions
      At line 259 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: inc_qs unused
left 00000156

Symbol: left
   Definitions
      At line 248 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: left unused
no_del 0000012A

Symbol: no_del
   Definitions
      At line 232 in file ..\\Src\\rho\\rho.s
   Uses
      At line 199 in file ..\\Src\\rho\\rho.s
Comment: no_del used once
pclk_start 000000A8

Symbol: pclk_start
   Definitions
      At line 174 in file ..\\Src\\rho\\rho.s
   Uses
      At line 181 in file ..\\Src\\rho\\rho.s
Comment: pclk_start used once
pixel_proc 000000A4

Symbol: pixel_proc
   Definitions
      At line 169 in file ..\\Src\\rho\\rho.s
   Uses
      At line 170 in file ..\\Src\\rho\\rho.s
Comment: pixel_proc used once
read_loop 000000D2

Symbol: read_loop
   Definitions
      At line 196 in file ..\\Src\\rho\\rho.s
   Uses
      At line 270 in file ..\\Src\\rho\\rho.s
Comment: read_loop used once
rg_row 0000009C

Symbol: rg_row
   Definitions
      At line 146 in file ..\\Src\\rho\\rho.s
   Uses
      At line 140 in file ..\\Src\\rho\\rho.s
Comment: rg_row used once
rho 00000000

Symbol: rho
   Definitions
      At line 20 in file ..\\Src\\rho\\rho.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      None
Comment: rho unused
rho_init 00000038

Symbol: rho_init
   Definitions
      At line 64 in file ..\\Src\\rho\\rho.s
   Uses
      At line 65 in file ..\\Src\\rho\\rho.s
Comment: rho_init used once
rho_lcheck 00000180

Symbol: rho_lcheck
   Definitions
      At line 267 in file ..\\Src\\rho\\rho.s
   Uses
      At line 227 in file ..\\Src\\rho\\rho.s
      At line 229 in file ..\\Src\\rho\\rho.s
      At line 236 in file ..\\Src\\rho\\rho.s

rho_proc 000000C0

Symbol: rho_proc
   Definitions
      At line 186 in file ..\\Src\\rho\\rho.s
   Uses
      At line 188 in file ..\\Src\\rho\\rho.s
Comment: rho_proc used once
right 0000015C

Symbol: right
   Definitions
      At line 250 in file ..\\Src\\rho\\rho.s
   Uses
      At line 247 in file ..\\Src\\rho\\rho.s
Comment: right used once
row_int 00000084

Symbol: row_int
   Definitions
      At line 119 in file ..\\Src\\rho\\rho.s
   Uses
      At line 120 in file ..\\Src\\rho\\rho.s
Comment: row_int used once
rx_corr 0000014E

Symbol: rx_corr
   Definitions
      At line 244 in file ..\\Src\\rho\\rho.s
   Uses
      At line 241 in file ..\\Src\\rho\\rho.s
Comment: rx_corr used once
sudo_mod 00000144

Symbol: sudo_mod
   Definitions
      At line 240 in file ..\\Src\\rho\\rho.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 243 in file ..\\Src\\rho\\rho.s
Comment: sudo_mod used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CAMERA_PORT 00000000

Symbol: CAMERA_PORT
   Definitions
      At line 39 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAMERA_PORT unused
CAPTURE_BUFFER 00000000

Symbol: CAPTURE_BUFFER
   Definitions
      At line 23 in file ..\\Src\\rho\\rho.s
   Uses
      At line 78 in file ..\\Src\\rho\\rho.s
      At line 132 in file ..\\Src\\rho\\rho.s
      At line 232 in file ..\\Src\\rho\\rho.s

CAPTURE_BUFFER_END 00000000

Symbol: CAPTURE_BUFFER_END
   Definitions
      At line 33 in file ..\\Src\\rho\\rho.s
   Uses
      At line 178 in file ..\\Src\\rho\\rho.s
Comment: CAPTURE_BUFFER_END used once
CAPTURE_BUFFER_MAX 00000000

Symbol: CAPTURE_BUFFER_MAX
   Definitions
      At line 34 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: CAPTURE_BUFFER_MAX unused
CENTROID_X 00000000

Symbol: CENTROID_X
   Definitions
      At line 30 in file ..\\Src\\rho\\rho.s
   Uses
      At line 244 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_X used once
CENTROID_Y 00000000

Symbol: CENTROID_Y
   Definitions
      At line 31 in file ..\\Src\\rho\\rho.s
   Uses
      At line 203 in file ..\\Src\\rho\\rho.s
Comment: CENTROID_Y used once
DENSITY_X 00000000

Symbol: DENSITY_X
   Definitions
      At line 25 in file ..\\Src\\rho\\rho.s
   Uses
      At line 221 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X used once
DENSITY_X_MAX 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


Symbol: DENSITY_X_MAX
   Definitions
      At line 32 in file ..\\Src\\rho\\rho.s
   Uses
      At line 224 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_X_MAX used once
DENSITY_Y 00000000

Symbol: DENSITY_Y
   Definitions
      At line 26 in file ..\\Src\\rho\\rho.s
   Uses
      At line 251 in file ..\\Src\\rho\\rho.s
Comment: DENSITY_Y used once
QUADRANT_BUFFER 00000000

Symbol: QUADRANT_BUFFER
   Definitions
      At line 27 in file ..\\Src\\rho\\rho.s
   Uses
      At line 101 in file ..\\Src\\rho\\rho.s
      At line 202 in file ..\\Src\\rho\\rho.s
      At line 259 in file ..\\Src\\rho\\rho.s

QUADRANT_PREVIOUS 00000000

Symbol: QUADRANT_PREVIOUS
   Definitions
      At line 29 in file ..\\Src\\rho\\rho.s
   Uses
      At line 217 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_PREVIOUS used once
QUADRANT_TOTAL 00000000

Symbol: QUADRANT_TOTAL
   Definitions
      At line 28 in file ..\\Src\\rho\\rho.s
   Uses
      At line 109 in file ..\\Src\\rho\\rho.s
Comment: QUADRANT_TOTAL used once
RHO_MEM_END 00000000

Symbol: RHO_MEM_END
   Definitions
      At line 38 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: RHO_MEM_END unused
THRESH_BUFFER 00000000

Symbol: THRESH_BUFFER
   Definitions
      At line 24 in file ..\\Src\\rho\\rho.s
   Uses
      At line 84 in file ..\\Src\\rho\\rho.s
      At line 85 in file ..\\Src\\rho\\rho.s
      At line 276 in file ..\\Src\\rho\\rho.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

THRESH_BUFFER_END 00000000

Symbol: THRESH_BUFFER_END
   Definitions
      At line 35 in file ..\\Src\\rho\\rho.s
   Uses
      At line 189 in file ..\\Src\\rho\\rho.s
      At line 267 in file ..\\Src\\rho\\rho.s
      At line 274 in file ..\\Src\\rho\\rho.s

THRESH_BUFFER_MAX 00000000

Symbol: THRESH_BUFFER_MAX
   Definitions
      At line 36 in file ..\\Src\\rho\\rho.s
   Uses
      None
Comment: THRESH_BUFFER_MAX unused
THRESH_VALUE 00000000

Symbol: THRESH_VALUE
   Definitions
      At line 37 in file ..\\Src\\rho\\rho.s
   Uses
      At line 171 in file ..\\Src\\rho\\rho.s
Comment: THRESH_VALUE used once
printBuffers 00000000

Symbol: printBuffers
   Definitions
      At line 187 in file ..\\Src\\rho\\rho.s
   Uses
      At line 281 in file ..\\Src\\rho\\rho.s
Comment: printBuffers used once
proc_flag 00000000

Symbol: proc_flag
   Definitions
      At line 41 in file ..\\Src\\rho\\rho.s
   Uses
      At line 90 in file ..\\Src\\rho\\rho.s
      At line 112 in file ..\\Src\\rho\\rho.s

zero_memory 00000000

Symbol: zero_memory
   Definitions
      At line 72 in file ..\\Src\\rho\\rho.s
   Uses
      At line 75 in file ..\\Src\\rho\\rho.s
Comment: zero_memory used once
20 symbols
380 symbols in table
